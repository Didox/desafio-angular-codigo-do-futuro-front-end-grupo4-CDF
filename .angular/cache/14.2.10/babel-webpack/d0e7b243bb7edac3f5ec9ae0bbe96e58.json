{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SimpleChanges } from '@angular/core';\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\nimport { CategoriaServico } from 'src/app/servicos/categoriaServico';\nimport { PedidoProdutoServico } from 'src/app/servicos/pedidoProdutoServico';\nimport { ProdutoServico } from 'src/app/servicos/produtoServico';\nimport { ChartType } from 'angular-google-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"angular-google-charts\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction HomeComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categoria_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", categoria_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 + 1 + \"- \" + categoria_r1.nome, \"\");\n  }\n}\n\nexport class HomeComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http; //Variáveis de Serviço CRUD\n\n    this.pedidoServico = {};\n    this.categoriaServico = {};\n    this.pedidoProdutoServico = {};\n    this.produtoServico = {}; //Arrays com dataBinding\n\n    this.categoriasMostradas = []; //Arrays Filtrados\n\n    this.pedidosProdutosSelecionados = [];\n    this.produtosSelecionados = [];\n    this.pedidosSelecionados = []; //Arrays com todos os valores\n\n    this.categorias = [];\n    this.pedidos = [];\n    this.pedidosProdutos = [];\n    this.produtos = []; //Variáveis com dataBinding\n\n    this.categoriaSelecionado = \"\";\n    this.dataInicial = \"01/01/2022\";\n    this.dataFinal = String(new Date(Date.now()));\n    this.dataMaxima = String(new Date(Date.now()));\n    this.valorTotal = 0;\n    this.valorPositivo = 0;\n    this.valorNegativo = 0; //Gráficos\n\n    this.titleColum = \"asd\";\n    this.columChart = ChartType.LineChart;\n    this.dataColum = [[0, 0], [1, 10], [2, 23], [3, 17], [4, 18], [5, 9], [6, 11], [7, 27], [8, 33], [9, 40], [10, 32], [11, 35], [12, 30], [13, 40], [14, 42], [15, 47], [16, 44], [17, 48], [18, 52], [19, 54], [20, 42], [21, 55], [22, 56], [23, 57], [24, 60], [25, 50], [26, 52], [27, 51], [28, 49], [29, 53], [30, 55], [31, 60], [32, 61], [33, 59], [34, 62], [35, 65], [36, 62], [37, 58], [38, 55], [39, 61], [40, 64], [41, 65], [42, 63], [43, 66], [44, 67], [45, 69], [46, 69], [47, 70], [48, 72], [49, 68], [50, 66], [51, 65], [52, 67], [53, 70], [54, 71], [55, 72], [56, 73], [57, 75], [58, 70], [59, 68], [60, 64], [61, 60], [62, 65], [63, 67], [64, 68], [65, 69], [66, 70], [67, 72], [68, 75], [69, 80]];\n    this.columnsNames = ['x', 'dogs'];\n    this.widthColum = 600;\n    this.heightColum = 400;\n    this.optionsColum = {\n      width: 1200,\n      height: 400,\n      legend: {\n        position: 'top',\n        maxLines: 3\n      },\n      bar: {\n        groupWidth: '75%'\n      },\n      isStacked: true\n    };\n    this.titleArea = \"Performance por Categoria\";\n    this.areaChart = ChartType.AreaChart;\n    this.dataArea = [];\n    this.optionsArea = {\n      width: 600,\n      height: 400,\n      hAxis: {\n        titleTextStyle: {\n          color: '#333'\n        }\n      },\n      vAxis: {\n        title: \"Faturamento\",\n        minValue: 0\n      }\n    };\n    this.titlePie = \"5 Produtos Mais Vendidos\";\n    this.pieChart = ChartType.PieChart;\n    this.dataPie = [['Name1', 5.0], ['Name2', 36.8], ['Name3', 42.8], ['Name4', 18.5], ['Name5', 16.2]];\n    this.columnNamesPie = ['Name', 'Percentage'];\n    this.optionsPie = {\n      width: 500,\n      height: 300\n    };\n  }\n\n  ngOnInit() {\n    this.pedidoServico = new PedidoServico(this.http);\n    this.categoriaServico = new CategoriaServico(this.http);\n    this.pedidoProdutoServico = new PedidoProdutoServico(this.http);\n    this.produtoServico = new ProdutoServico(this.http);\n    this.listaDeCategorias();\n  }\n\n  ngOnChanges(changes) {\n    this.filtraData();\n  }\n\n  listaDeCategorias() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let categorias = yield _this.categoriaServico.lista();\n      categorias?.forEach(categoria => {\n        _this.categorias.push(categoria);\n      });\n      _this.categoriasMostradas = _this.categorias;\n      yield _this.listaDePedidos();\n      yield _this.listaDeProdutos();\n      yield _this.listaDePedidosProdutos();\n\n      _this.gerarGraficoBarra();\n\n      _this.gerarGraficoArea(0);\n\n      _this.gerarPie();\n    })();\n  }\n\n  dataBr(data) {\n    return data.getDate().toString() + \"/\" + (data.getMonth() + 1).toString() + \"/\" + data.getFullYear().toString();\n  }\n\n  gerarGraficoBarra() {\n    let data = [];\n    let title = \"Faturamento ao Longo do tempo\";\n    let dictPedido = new Map();\n    this.pedidosSelecionados.forEach(pedido => {\n      dictPedido.set(pedido.id, new Date(pedido.data));\n    });\n    let dictData = new Map();\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\n      let date = dictPedido.get(pedidoProduto.pedido_id);\n\n      if (date) {\n        if (dictData.get(date)) {\n          let datas = dictData.get(date);\n          if (datas) data[Number(datas)][1] += Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor);\n        } else {\n          data.push([this.dataBr(date), Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor)]);\n          dictData.set(date, data.length - 1);\n        }\n      }\n    });\n\n    for (let i = 1; i < data.length; i++) {\n      data[i][1] += data[i - 1][1];\n    }\n\n    console.log(\"line\", data);\n    this.dataColum = data;\n    this.titleColum = title;\n  }\n\n  gerarPie() {\n    let dataPie = [];\n    let nomes = [\"\"];\n    let dictProduto = new Map();\n    this.produtosSelecionados.forEach(produto => {\n      nomes.push(produto.nome.toString());\n      dictProduto.set(produto.id, nomes.length - 1);\n    });\n    let produtos = [];\n    let dictProdutoTemp = new Map();\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\n      if (dictProdutoTemp.get(pedidoProduto.produto_id)) {\n        let id = Number(dictProdutoTemp.get(pedidoProduto.produto_id));\n        if (id) produtos[id][1] += Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor);\n      } else {\n        let id = dictProduto.get(pedidoProduto.produto_id);\n\n        if (id) {\n          produtos.push([nomes[Number(id)], Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor)]);\n          dictProdutoTemp.set(pedidoProduto.produto_id, produtos.length - 1);\n        }\n      }\n    });\n    let vazio = [];\n\n    for (let i = 0; i < produtos.length; i++) {\n      const produto = produtos[i];\n\n      if (produto[1] > 0) {\n        vazio.push(produto);\n      }\n    }\n\n    produtos = vazio;\n    console.log(\"Cama   \", produtos);\n\n    if (produtos.length > 4) {\n      let index = [0, 0, 0, 0];\n      let valor = [0, 0, 0, 0];\n\n      for (let i = 0; i < produtos.length; i++) {\n        const produto = produtos[i];\n        let val = Number(produto[1]);\n\n        if (valor[0] < val) {\n          valor[0] = val;\n          index[0] = i;\n\n          for (let i = 1; i < 4; i++) {\n            if (valor[i - 1] > valor[i]) {\n              let temp = valor[i];\n              valor[i] = valor[i - 1];\n              valor[i - 1] = temp;\n              let tem = index[i];\n              index[i] = index[i - 1];\n              index[i - 1] = tem;\n            }\n          }\n        }\n      }\n\n      let outros = 0;\n\n      for (let i = 0; i < produtos.length; i++) {\n        const produto = produtos[i];\n\n        if (!index.find(ind => ind == i)) {\n          outros += Number(produto[1]);\n        }\n      }\n\n      let total = 0;\n      valor.forEach(val => {\n        total += val;\n      });\n      console.log(outros);\n      total += outros;\n      let nome1 = produtos[index[3]][0];\n      let nome2 = produtos[index[2]][0];\n      let nome3 = produtos[index[1]][0];\n      let nome4 = produtos[index[0]][0];\n      let real1 = produtos[index[3]][1] / total;\n      let real2 = produtos[index[2]][1] / total;\n      let real3 = produtos[index[1]][1] / total;\n      let real4 = produtos[index[0]][1] / total;\n      dataPie = [[nome1, real1], [nome2, real2], [nome3, real3], [nome4, real4]];\n      let restante = 1 - real1 - real2 - real3 - real4;\n      dataPie.push([\"Outros\", restante]);\n    } else {\n      dataPie = produtos;\n    }\n\n    this.dataPie = dataPie;\n    console.log(\"Pie \", this.dataPie);\n  }\n\n  gerarGraficoArea(categoria) {\n    let dataInicial = this.corrigirInicial(this.dataInicial);\n    let dataFinal = this.aumentar(this.dataFinal);\n    let dataArea = [];\n    let title = `Performance por Categoria ao longo do tempo`;\n    let columnsNames = [\"data\"];\n    let datas = [dataInicial];\n    let diferenca = dataFinal.getTime() - dataInicial.getTime();\n    let layers = this.categorias.length;\n\n    if (!(categoria.toString() === \"0\")) {\n      this.titleArea = `Performance por Produto dentro de ${this.categorias[Number(categoria)]} ao longo do tempo`;\n      this.produtosSelecionados.forEach(produto => {\n        columnsNames.push(produto.nome);\n      });\n      layers = this.produtosSelecionados.length;\n    } else {\n      this.categorias.forEach(categoria => {\n        columnsNames.push(categoria.nome);\n      });\n    }\n\n    let dictPedidoTemp = new Map();\n\n    for (let i = 0; i < 20; i++) {\n      datas.push(new Date(datas[i].getTime() + diferenca / 20));\n      dataArea.push([this.getStringArea(dataInicial, dataFinal, new Date(datas[i].getTime() + diferenca / 20))]);\n\n      for (let j = 0; j < layers; j++) {\n        dataArea[i].push(0);\n      }\n    }\n\n    this.pedidos.forEach(pedido => {\n      let datar = new Date(pedido.data.toString());\n\n      for (let i = 0; i < 20; i++) {\n        if (datar > datas[i] && datar <= datas[i + 1]) dictPedidoTemp.set(pedido.id, i);\n      }\n    });\n\n    if (!(categoria.toString() === \"0\")) {\n      let cont = 0;\n      this.produtosSelecionados.forEach(produto => {\n        cont++;\n        let id_produto = produto.id;\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id);\n\n          if (id && pedidoProduto.produto_id.toString() === id_produto.toString()) {\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n          }\n        });\n      });\n    } else {\n      let cont = 0;\n      this.categorias.forEach(categoria => {\n        cont++;\n        let dictProdutoTemp = new Map();\n        let categoria_id = categoria.id;\n        this.produtosSelecionados.forEach(produto => {\n          dictProdutoTemp.set(produto.id, produto.categoria_id.toString() === categoria_id.toString());\n        });\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id);\n\n          if (id && dictProdutoTemp.get(pedidoProduto.produto_id)) {\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n          }\n        });\n      });\n    }\n\n    for (let i = 1; i < dataArea.length; i++) {\n      for (let j = 1; j < dataArea[i].length; j++) {\n        dataArea[i][j] += dataArea[i - 1][j];\n      }\n    }\n\n    console.log(columnsNames, dataArea);\n    this.columnsNames = columnsNames;\n    this.dataArea = dataArea;\n    this.titleArea = title;\n  }\n\n  getStringArea(dataIni, dataFim, atual) {\n    var meses = [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"];\n    let diferenca = parseInt(((dataFim.getTime() - dataIni.getTime()) / 1000 / 24 / 3600).toString());\n\n    if (diferenca < 5) {\n      return `${atual.getHours()}:${atual.getMinutes()}/Dia ${atual.getDate()}`;\n    }\n\n    if (diferenca < 21) return `${atual.getDate()}/${atual.getMonth() + 1}/${atual.getFullYear()}`;\n\n    if (diferenca < 700) {\n      let semana = 0;\n\n      if (atual.getDate() < 7) {\n        semana = 1;\n      } else if (atual.getDate() < 14) {\n        semana = 2;\n      } else if (atual.getDate() < 21) {\n        semana = 3;\n      } else if (atual.getDate() < 28) {\n        semana = 4;\n      } else {\n        semana = 5;\n      }\n\n      return `Sem ${semana} /${meses[atual.getMonth() + 1]}`;\n    }\n\n    if (diferenca < 3650) {\n      return `${meses[atual.getMonth()]}/${atual.getFullYear()}`;\n    }\n\n    return `${atual.getFullYear()}`;\n  }\n\n  listaDeProdutos() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let produtos = yield _this2.produtoServico.lista();\n      produtos?.forEach(produto => {\n        _this2.produtos.push(produto);\n      });\n      _this2.produtosSelecionados = _this2.produtos;\n    })();\n  }\n\n  listaDePedidosProdutos() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidosProdutos = yield _this3.pedidoProdutoServico.lista();\n      pedidosProdutos?.forEach(pedidoProduto => {\n        _this3.pedidosProdutos.push(pedidoProduto);\n      });\n      _this3.pedidosProdutosSelecionados = _this3.pedidosProdutos;\n\n      _this3.getValor_Total();\n    })();\n  }\n\n  listaDePedidos() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidos = yield _this4.pedidoServico.lista();\n      pedidos?.forEach(pedido => {\n        _this4.pedidos.push(pedido);\n      });\n      _this4.pedidosSelecionados = _this4.pedidos?.reverse();\n    })();\n  }\n\n  getValor_Total() {\n    let total = 0,\n        positivo = 0,\n        negativo = 0;\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\n      let val1 = total;\n      total += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n\n      if (val1 > total) {\n        negativo += val1 - total;\n      } else {\n        positivo += total - val1;\n      }\n    });\n    this.valorTotal = total;\n    this.valorPositivo = positivo;\n    this.valorNegativo = negativo;\n  }\n\n  atualizar() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.pedidosSelecionados = _this5.pedidos;\n      _this5.pedidosProdutosSelecionados = _this5.pedidosProdutos;\n      _this5.produtosSelecionados = _this5.produtos;\n      let categoria = new Number(_this5.categoriaSelecionado.split(\"-\")[0]);\n\n      let dictPedidoSelecionado = _this5.filtraData();\n\n      let dictProdutoSelecionado = _this5.filtrarProduto(categoria);\n\n      let dictPedidoTemp = new Map();\n\n      let save = _this5.pedidosProdutosSelecionados.filter(pedidoProduto => {\n        let val = false;\n\n        if (dictPedidoSelecionado.get(pedidoProduto.pedido_id)) {\n          if (dictProdutoSelecionado.get(pedidoProduto.produto_id)) {\n            val = true;\n          }\n        }\n\n        if (!dictPedidoTemp.get(pedidoProduto.pedido_id)) dictPedidoTemp.set(pedidoProduto.pedido_id, val);\n        return val;\n      });\n\n      _this5.pedidosProdutosSelecionados = save;\n      _this5.pedidosSelecionados = _this5.pedidosSelecionados.filter(pedido => {\n        if (dictPedidoSelecionado.get(pedido.id)) return true;\n        return false;\n      });\n\n      _this5.getValor_Total();\n\n      _this5.gerarGraficoBarra();\n\n      _this5.gerarGraficoArea(categoria);\n\n      _this5.gerarPie();\n    })();\n  }\n\n  filtrarProduto(categoria_id) {\n    let dictProdutoSelecionado = new Map();\n\n    if (categoria_id.toString() === \"0\") {\n      this.produtosSelecionados.forEach(produto => {\n        dictProdutoSelecionado.set(produto.id, true);\n      });\n      return dictProdutoSelecionado;\n    }\n\n    this.produtosSelecionados = this.produtosSelecionados.filter(produto => {\n      if (produto.categoria_id.toString() === categoria_id.toString()) {\n        dictProdutoSelecionado.set(produto.id, true);\n        return true;\n      }\n\n      dictProdutoSelecionado.set(produto.id, false);\n      return false;\n    });\n    return dictProdutoSelecionado;\n  }\n\n  number(a) {\n    return Number(a);\n  }\n\n  filtraData() {\n    let dictPedidoSelecionado = new Map();\n    this.pedidosSelecionados = this.pedidos.filter(result => {\n      let val = this.corrigirInicial(this.dataInicial) < new Date(result.data.toString()) && this.aumentar(this.dataFinal) > new Date(result.data.toString());\n      dictPedidoSelecionado.set(result.id, val);\n      return val;\n    });\n    return dictPedidoSelecionado;\n  }\n\n  corrigirInicial(data) {\n    let val = new Date(String(data)).getTime() + 10800000 - 1;\n    return new Date(val);\n  }\n\n  aumentar(data) {\n    let val = new Date(String(data)).getTime() + 86399999 + 10800000;\n    return new Date(val);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 40,\n  vars: 29,\n  consts: [[\"id\", \"contact\", 1, \"page-section\", 2, \"margin-top\", \"30px\"], [1, \"container2\"], [1, \"filtrosChart\"], [1, \"modelo1\"], [\"for\", \"labelFiltro\", 2, \"display\", \"block\"], [\"type\", \"date\", \"onkeydown\", \"return false\", \"id\", \"dataI\", \"name\", \"dataI\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"type\", \"date\", \"onkeydown\", \"return false\", \"id\", \"dataF\", \"name\", \"dataF\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"name\", \"teste\", \"id\", \"required\", \"data-placeholder\", \"CPF - Nome do cliente\", 1, \"form-control\", \"form-control-chosen-required\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"modelo\"], [\"for\", \"labelTotal\", 2, \"display\", \"block\"], [\"for\", \"labelTotalView\", 2, \"display\", \"block\"], [\"for\", \"labelSoma\", 2, \"display\", \"block\"], [\"for\", \"labelSomaView\", 2, \"display\", \"block\"], [\"for\", \"labelSubtracao\", 2, \"display\", \"block\"], [\"for\", \"labelSubtracaoView\", 2, \"display\", \"block\"], [3, \"title\", \"type\", \"data\", \"width\", \"height\", \"options\"], [1, \"charts\"], [3, \"title\", \"type\", \"data\", \"columns\", \"options\"], [3, \"id\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Data Inicio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.dataInicial = $event;\n      })(\"change\", function HomeComponent_Template_input_change_6_listener() {\n        return ctx.atualizar();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Data Final\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.dataFinal = $event;\n      })(\"change\", function HomeComponent_Template_input_change_9_listener() {\n        return ctx.atualizar();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Produtos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 7);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_select_change_12_listener() {\n        return ctx.atualizar();\n      })(\"ngModelChange\", function HomeComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.categoriaSelecionado = $event;\n      });\n      i0.ɵɵelementStart(13, \"option\");\n      i0.ɵɵtext(14, \"0- Todas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, HomeComponent_option_15_Template, 2, 2, \"option\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 10);\n      i0.ɵɵtext(18, \"Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 11);\n      i0.ɵɵtext(20);\n      i0.ɵɵpipe(21, \"currency\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"label\", 12);\n      i0.ɵɵtext(24, \"Entrada\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"label\", 13);\n      i0.ɵɵtext(26);\n      i0.ɵɵpipe(27, \"currency\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(28, \"div\", 9)(29, \"label\", 14);\n      i0.ɵɵtext(30, \"Sa\\u00EDda\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"label\", 15);\n      i0.ɵɵtext(32);\n      i0.ɵɵpipe(33, \"currency\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(34, \"hr\");\n      i0.ɵɵelementStart(35, \"div\");\n      i0.ɵɵelement(36, \"google-chart\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"div\", 17);\n      i0.ɵɵelement(38, \"google-chart\", 18)(39, \"google-chart\", 18);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataInicial);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataFinal);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.categoriaSelecionado);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categoriasMostradas);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 23, ctx.number(ctx.valorTotal)));\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 25, ctx.number(ctx.valorPositivo)));\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(33, 27, ctx.number(ctx.valorNegativo)));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"title\", ctx.titleColum)(\"type\", ctx.columChart)(\"data\", ctx.dataColum)(\"width\", ctx.widthColum)(\"height\", ctx.heightColum)(\"options\", ctx.optionsColum);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", ctx.titleArea)(\"type\", ctx.areaChart)(\"data\", ctx.dataArea)(\"columns\", ctx.columnsNames)(\"options\", ctx.optionsArea);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"title\", ctx.titlePie)(\"type\", ctx.pieChart)(\"data\", ctx.dataPie)(\"columns\", ctx.columnNamesPie)(\"options\", ctx.optionsPie);\n    }\n  },\n  dependencies: [i3.GoogleChartComponent, i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i4.CurrencyPipe],\n  styles: [\".modelo[_ngcontent-%COMP%]{\\r\\n    display: inline-block;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]{\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]:hover{\\r\\n    color: rgb(23, 23, 209);\\r\\n    transition: 0.5s;\\r\\n}\\r\\n.charts[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n}\\r\\n.filtrosChart[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n}\\r\\n.modelo1[_ngcontent-%COMP%]{\\r\\n    display:flex;\\r\\n    width: 100%;\\r\\n    align-items: center;\\r\\n}\\r\\ninput[_ngcontent-%COMP%]{\\r\\n    padding-left: 10px;\\r\\n    border-radius: 15px;\\r\\n    border-style: groove;\\r\\n    border-width: 2px;\\r\\n}\\r\\nlabel[_ngcontent-%COMP%]{\\r\\n    padding-left: 10px;\\r\\n    padding-right: 5px;\\r\\n}\\r\\n.form-control[_ngcontent-%COMP%]{\\r\\n    width: 160px;\\r\\n    border-radius: 15px;\\r\\n    border-style: groove;\\r\\n    border-width: 2px;\\r\\n}\\r\\n.modelo[_ngcontent-%COMP%]{\\r\\n    padding-right: 90px;\\r\\n}\\r\\n.container2[_ngcontent-%COMP%]{\\r\\n    border-style: groove;\\r\\n    padding-top: 20px;\\r\\n    border-radius: 35px;\\r\\n    border-width: 1px;\\r\\n    font-size: 15px;\\r\\n    margin-left: 17px;\\r\\n    margin-right: 40px;\\r\\n    margin-top: 0px;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n.page-section[_ngcontent-%COMP%]{\\r\\n    padding-bottom: 25px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixvQkFBb0I7SUFDcEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0lBQ0ksb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixtQkFBbUI7QUFDdkI7QUFDQTtJQUNJLG9CQUFvQjtBQUN4QiIsImZpbGUiOiJob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubW9kZWxve1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcbi5uYURpcmVpdGF7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG4ubmFEaXJlaXRhOmhvdmVye1xyXG4gICAgY29sb3I6IHJnYigyMywgMjMsIDIwOSk7XHJcbiAgICB0cmFuc2l0aW9uOiAwLjVzO1xyXG59XHJcbi5jaGFydHN7XHJcbiAgICBkaXNwbGF5OmZsZXg7XHJcbn1cclxuLmZpbHRyb3NDaGFydHtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxufVxyXG4ubW9kZWxvMXtcclxuICAgIGRpc3BsYXk6ZmxleDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5pbnB1dHtcclxuICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XHJcbiAgICBib3JkZXItc3R5bGU6IGdyb292ZTtcclxuICAgIGJvcmRlci13aWR0aDogMnB4O1xyXG59XHJcbmxhYmVse1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxMHB4O1xyXG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xyXG59XHJcbi5mb3JtLWNvbnRyb2x7XHJcbiAgICB3aWR0aDogMTYwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBncm9vdmU7XHJcbiAgICBib3JkZXItd2lkdGg6IDJweDtcclxufVxyXG4ubW9kZWxve1xyXG4gICAgcGFkZGluZy1yaWdodDogOTBweDtcclxufVxyXG4uY29udGFpbmVyMntcclxuICAgIGJvcmRlci1zdHlsZTogZ3Jvb3ZlO1xyXG4gICAgcGFkZGluZy10b3A6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzNXB4O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMTdweDtcclxuICAgIG1hcmdpbi1yaWdodDogNDBweDtcclxuICAgIG1hcmdpbi10b3A6IDBweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuLnBhZ2Utc2VjdGlvbntcclxuICAgIHBhZGRpbmctYm90dG9tOiAyNXB4O1xyXG59Il19 */\"]\n});","map":{"version":3,"mappings":"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","names":["SimpleChanges","PedidoServico","CategoriaServico","PedidoProdutoServico","ProdutoServico","ChartType","i0","HomeComponent","constructor","router","http","String","Date","now","LineChart","width","height","legend","position","maxLines","bar","groupWidth","isStacked","AreaChart","hAxis","titleTextStyle","color","vAxis","title","minValue","PieChart","ngOnInit","pedidoServico","categoriaServico","pedidoProdutoServico","produtoServico","listaDeCategorias","ngOnChanges","changes","filtraData","categorias","lista","forEach","categoria","push","categoriasMostradas","listaDePedidos","listaDeProdutos","listaDePedidosProdutos","gerarGraficoBarra","gerarGraficoArea","gerarPie","dataBr","data","getDate","toString","getMonth","getFullYear","dictPedido","Map","pedidosSelecionados","pedido","set","id","dictData","pedidosProdutosSelecionados","pedidoProduto","date","get","pedido_id","datas","Number","quantidade","valor","length","i","console","log","dataColum","titleColum","dataPie","nomes","dictProduto","produtosSelecionados","produto","nome","produtos","dictProdutoTemp","produto_id","vazio","index","val","temp","tem","outros","find","ind","total","nome1","nome2","nome3","nome4","real1","real2","real3","real4","restante","dataInicial","corrigirInicial","dataFinal","aumentar","dataArea","columnsNames","diferenca","getTime","layers","titleArea","dictPedidoTemp","getStringArea","j","pedidos","datar","cont","id_produto","pedidosProdutos","categoria_id","dataIni","dataFim","atual","meses","parseInt","getHours","getMinutes","semana","getValor_Total","reverse","positivo","negativo","val1","valorTotal","valorPositivo","valorNegativo","atualizar","categoriaSelecionado","split","dictPedidoSelecionado","dictProdutoSelecionado","filtrarProduto","save","filter","number","a","result","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Pedido } from 'src/app/models/pedido';\r\nimport { Categoria } from 'src/app/models/categoria';\r\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\r\nimport { CategoriaServico } from 'src/app/servicos/categoriaServico';\r\nimport { PedidoProdutoServico } from 'src/app/servicos/pedidoProdutoServico';\r\nimport { ProdutoServico } from 'src/app/servicos/produtoServico';\r\nimport { PedidoProduto } from 'src/app/models/pedidoProduto';\r\nimport { Produto } from 'src/app/models/produto';\r\nimport { ChartType } from 'angular-google-charts';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  //Variáveis de Serviço CRUD\r\n  public pedidoServico: PedidoServico = {} as PedidoServico;\r\n  public categoriaServico: CategoriaServico = {} as CategoriaServico;\r\n  public pedidoProdutoServico: PedidoProdutoServico = {} as PedidoProdutoServico;\r\n  public produtoServico: ProdutoServico = {} as ProdutoServico;\r\n\r\n  //Arrays com dataBinding\r\n  public categoriasMostradas: Categoria[] = [];\r\n\r\n  //Arrays Filtrados\r\n  public pedidosProdutosSelecionados: PedidoProduto[] = []\r\n  public produtosSelecionados: Produto[] = [];\r\n  public pedidosSelecionados: Pedido[] = [];\r\n\r\n  //Arrays com todos os valores\r\n  private categorias: Categoria[] = []\r\n  private pedidos: Pedido[] = []\r\n  private pedidosProdutos: PedidoProduto[] = []\r\n  private produtos: Produto[] = []\r\n\r\n  //Variáveis com dataBinding\r\n  public categoriaSelecionado:String=\"\";\r\n  public dataInicial:String = \"01/01/2022\";\r\n  public dataFinal:String = String(new Date(Date.now()));\r\n  public dataMaxima:String = String(new Date(Date.now()));\r\n  public valorTotal:Number=0;\r\n  public valorPositivo:Number=0;\r\n  public valorNegativo:Number=0;\r\n\r\n  //Gráficos\r\n  titleColum = \"asd\";\r\n  columChart = ChartType.LineChart;\r\n  dataColum: any[] = [\r\n    [0, 0],   [1, 10],  [2, 23],  [3, 17],  [4, 18],  [5, 9],\r\n    [6, 11],  [7, 27],  [8, 33],  [9, 40],  [10, 32], [11, 35],\r\n    [12, 30], [13, 40], [14, 42], [15, 47], [16, 44], [17, 48],\r\n    [18, 52], [19, 54], [20, 42], [21, 55], [22, 56], [23, 57],\r\n    [24, 60], [25, 50], [26, 52], [27, 51], [28, 49], [29, 53],\r\n    [30, 55], [31, 60], [32, 61], [33, 59], [34, 62], [35, 65],\r\n    [36, 62], [37, 58], [38, 55], [39, 61], [40, 64], [41, 65],\r\n    [42, 63], [43, 66], [44, 67], [45, 69], [46, 69], [47, 70],\r\n    [48, 72], [49, 68], [50, 66], [51, 65], [52, 67], [53, 70],\r\n    [54, 71], [55, 72], [56, 73], [57, 75], [58, 70], [59, 68],\r\n    [60, 64], [61, 60], [62, 65], [63, 67], [64, 68], [65, 69],\r\n    [66, 70], [67, 72], [68, 75], [69, 80]];\r\n  columnsNames: any[] = ['x','dogs'];\r\n  widthColum = 600;\r\n  heightColum = 400;\r\n  optionsColum = {\r\n    width: 1200,\r\n    height: 400,\r\n    legend: { position: 'top', maxLines: 3 },\r\n    bar: { groupWidth: '75%' },\r\n    isStacked: true,\r\n  };\r\n\r\n  titleArea = \"Performance por Categoria\"\r\n  areaChart = ChartType.AreaChart;\r\n  dataArea: any[] = []\r\n  optionsArea = {\r\n    width: 600,\r\n    height: 400,\r\n    hAxis: { titleTextStyle: { color: '#333' } },\r\n    vAxis: { title: \"Faturamento\", minValue: 0 }\r\n  }\r\n\r\n  titlePie = \"5 Produtos Mais Vendidos\";\r\n  pieChart = ChartType.PieChart;\r\n  dataPie = [\r\n    ['Name1', 5.0],\r\n    ['Name2', 36.8],\r\n    ['Name3', 42.8],\r\n    ['Name4', 18.5],\r\n    ['Name5', 16.2]\r\n  ];\r\n  columnNamesPie = ['Name', 'Percentage'];\r\n  optionsPie = {\r\n\r\n    width: 500,\r\n    height: 300\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.pedidoServico = new PedidoServico(this.http);\r\n    this.categoriaServico = new CategoriaServico(this.http);\r\n    this.pedidoProdutoServico = new PedidoProdutoServico(this.http);\r\n    this.produtoServico = new ProdutoServico(this.http);\r\n    this.listaDeCategorias();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.filtraData();\r\n  }\r\n\r\n  private async listaDeCategorias() {\r\n    let categorias = await this.categoriaServico.lista();\r\n    categorias?.forEach(categoria => {\r\n      this.categorias.push(categoria);\r\n    })\r\n    this.categoriasMostradas = this.categorias;\r\n    await this.listaDePedidos();\r\n    await this.listaDeProdutos();\r\n    await this.listaDePedidosProdutos();\r\n    this.gerarGraficoBarra();\r\n    this.gerarGraficoArea(0);\r\n    this.gerarPie()\r\n  }\r\n  private dataBr(data: Date): string {\r\n    return data.getDate().toString() + \"/\" + (data.getMonth() + 1).toString() + \"/\" + data.getFullYear().toString()\r\n  }\r\n\r\n  private gerarGraficoBarra() {\r\n    let data:any[]=[]\r\n    let title=\"Faturamento ao Longo do tempo\"\r\n    let dictPedido:Map<Number,Date>=new Map()\r\n    this.pedidosSelecionados.forEach(pedido=>{\r\n      dictPedido.set(pedido.id,new Date(pedido.data));\r\n    })\r\n    let dictData:Map<Date,Number>=new Map()\r\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto=>{\r\n      let date=dictPedido.get(pedidoProduto.pedido_id)\r\n      if(date){\r\n        if(dictData.get(date)){\r\n          let datas=dictData.get(date)\r\n          if(datas)data[Number(datas)][1]+=Number(pedidoProduto.quantidade)*Number(pedidoProduto.valor)\r\n        }else{\r\n          data.push([this.dataBr(date),Number(pedidoProduto.quantidade)*Number(pedidoProduto.valor)])\r\n          dictData.set(date,data.length-1);\r\n        }\r\n      }\r\n    })\r\n    for (let i = 1; i < data.length; i++) {\r\n      data[i][1]+=data[i-1][1];\r\n    }\r\n    console.log(\"line\", data)\r\n    this.dataColum = data\r\n    this.titleColum = title\r\n  }\r\n  private gerarPie() {\r\n    let dataPie:any[] =[]\r\n    let nomes: string[] = [\"\"]\r\n    let dictProduto: Map<Number, Number> = new Map();\r\n    this.produtosSelecionados.forEach(produto => {\r\n      nomes.push(produto.nome.toString())\r\n      dictProduto.set(produto.id, nomes.length - 1);\r\n    })\r\n    let produtos: any[] = []\r\n    let dictProdutoTemp: Map<Number, Number> = new Map();\r\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\r\n      if (dictProdutoTemp.get(pedidoProduto.produto_id)) {\r\n        let id = Number(dictProdutoTemp.get(pedidoProduto.produto_id))\r\n        if (id) produtos[id][1] += (Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor))\r\n      } else {\r\n        let id = dictProduto.get(pedidoProduto.produto_id)\r\n        if (id){ \r\n          produtos.push([nomes[Number(id)], Number(pedidoProduto.quantidade) * Number(pedidoProduto.valor)]) \r\n          dictProdutoTemp.set(pedidoProduto.produto_id, produtos.length-1)\r\n        }\r\n      }\r\n    })\r\n    let vazio:any[]=[]\r\n    for (let i = 0; i < produtos.length; i++) {\r\n      const produto = produtos[i];\r\n      if(produto[1]>0){\r\n        vazio.push(produto)\r\n      }\r\n    }\r\n    produtos=vazio\r\n    console.log(\"Cama   \", produtos)\r\n    if (produtos.length > 4) {\r\n      let index = [0, 0, 0, 0]\r\n      let valor = [0, 0, 0, 0]\r\n      for (let i = 0; i < produtos.length; i++) {\r\n        const produto = produtos[i];\r\n        let val = Number(produto[1]);\r\n        if (valor[0] < val) {\r\n          valor[0] = val\r\n          index[0] = i\r\n          for (let i = 1; i < 4; i++) {\r\n            if (valor[i - 1] > valor[i]) {\r\n              let temp = valor[i]\r\n              valor[i] = valor[i - 1]\r\n              valor[i - 1] = temp\r\n              let tem = index[i]\r\n              index[i] = index[i - 1]\r\n              index[i - 1] = tem\r\n            }\r\n          }\r\n        }\r\n      }\r\n      let outros = 0\r\n      for (let i = 0; i < produtos.length; i++) {\r\n        const produto = produtos[i];\r\n        if (!index.find(ind => ind == i)) {\r\n          outros += Number(produto[1])\r\n        }\r\n      }\r\n      let total = 0\r\n      valor.forEach(val => {\r\n        total += val\r\n      })\r\n      console.log(outros)\r\n      total += outros\r\n      let nome1 = produtos[index[3]][0]\r\n      let nome2 = produtos[index[2]][0]\r\n      let nome3 = produtos[index[1]][0]\r\n      let nome4 = produtos[index[0]][0]\r\n      let real1 = produtos[index[3]][1] / total\r\n      let real2 = produtos[index[2]][1] / total\r\n      let real3 = produtos[index[1]][1] / total\r\n      let real4 = produtos[index[0]][1] / total\r\n      dataPie = [[nome1, real1],\r\n      [nome2, real2],\r\n      [nome3, real3],\r\n      [nome4, real4]]\r\n      let restante = 1 - real1 - real2 - real3 - real4\r\n      dataPie.push([\"Outros\", restante])\r\n    }else{\r\n      dataPie=produtos\r\n    }\r\n    this.dataPie = dataPie\r\n    console.log(\"Pie \",this.dataPie)\r\n  }\r\n\r\n  private gerarGraficoArea(categoria: Number) {\r\n    let dataInicial = this.corrigirInicial(this.dataInicial);\r\n    let dataFinal = this.aumentar(this.dataFinal);\r\n    let dataArea: any[] = []\r\n    let title = `Performance por Categoria ao longo do tempo`\r\n    let columnsNames:String[]=[\"data\"]\r\n    let datas: any[] = [dataInicial]\r\n    let diferenca = dataFinal.getTime() - dataInicial.getTime()\r\n    let layers = this.categorias.length\r\n    if (!(categoria.toString() === \"0\")) {\r\n      this.titleArea = `Performance por Produto dentro de ${this.categorias[Number(categoria)]} ao longo do tempo`\r\n      this.produtosSelecionados.forEach(produto=>{\r\n        columnsNames.push(produto.nome)\r\n      })\r\n      layers = this.produtosSelecionados.length\r\n    }else{\r\n      this.categorias.forEach(categoria=>{\r\n        columnsNames.push(categoria.nome)\r\n      })\r\n    }\r\n\r\n    let dictPedidoTemp: Map<Number, Number> = new Map();\r\n    for (let i = 0; i < 20; i++) {\r\n      datas.push(new Date(datas[i].getTime() + diferenca / 20))\r\n      dataArea.push([this.getStringArea(dataInicial, dataFinal, new Date(datas[i].getTime() + diferenca / 20))])\r\n      for (let j = 0; j < layers; j++) {\r\n        dataArea[i].push(0)\r\n      }\r\n    }\r\n    this.pedidos.forEach(pedido => {\r\n      let datar = new Date(pedido.data.toString())\r\n      for (let i = 0; i < 20; i++) {\r\n        if (datar > datas[i] && datar <= datas[i + 1]) dictPedidoTemp.set(pedido.id, i)\r\n      }\r\n    });\r\n    if (!(categoria.toString() === \"0\")) {\r\n      let cont = 0\r\n      this.produtosSelecionados.forEach(produto => {\r\n        cont++\r\n        let id_produto = produto.id;\r\n        this.pedidosProdutos.forEach(pedidoProduto => {\r\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id)\r\n          if (id && pedidoProduto.produto_id.toString() === id_produto.toString()) {\r\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade)\r\n          }\r\n        })\r\n      })\r\n    } else {\r\n      let cont = 0\r\n      this.categorias.forEach(categoria => {\r\n        cont++\r\n        let dictProdutoTemp: Map<Number, boolean> = new Map()\r\n        let categoria_id = categoria.id\r\n        this.produtosSelecionados.forEach(produto => {\r\n          dictProdutoTemp.set(produto.id, produto.categoria_id.toString() === categoria_id.toString());\r\n        })\r\n        this.pedidosProdutos.forEach(pedidoProduto => {\r\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id)\r\n          if (id && dictProdutoTemp.get(pedidoProduto.produto_id)) {\r\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade)\r\n          }\r\n        })\r\n      })\r\n\r\n    }\r\n    for (let i = 1; i < dataArea.length; i++) {\r\n      for (let j = 1; j < dataArea[i].length; j++) {\r\n        dataArea[i][j] += dataArea[i - 1][j];\r\n      }\r\n    }\r\n    console.log(columnsNames,dataArea)\r\n    this.columnsNames=columnsNames\r\n    this.dataArea = dataArea\r\n    this.titleArea = title\r\n  }\r\n\r\n  private getStringArea(dataIni: Date, dataFim: Date, atual: Date): string {\r\n    var meses = [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"];\r\n    let diferenca = parseInt(((dataFim.getTime() - dataIni.getTime()) / 1000 / 24 / 3600).toString())\r\n    if (diferenca < 5) {\r\n      return `${atual.getHours()}:${atual.getMinutes()}/Dia ${atual.getDate()}`\r\n    }\r\n    if (diferenca < 21)\r\n      return `${atual.getDate()}/${atual.getMonth() + 1}/${atual.getFullYear()}`\r\n    if (diferenca < 700) {\r\n      let semana = 0;\r\n      if (atual.getDate() < 7) {\r\n        semana = 1\r\n      } else if (atual.getDate() < 14) {\r\n        semana = 2\r\n      } else if (atual.getDate() < 21) {\r\n        semana = 3\r\n      } else if (atual.getDate() < 28) {\r\n        semana = 4\r\n      } else {\r\n        semana = 5\r\n      }\r\n      return `Sem ${semana} /${meses[atual.getMonth() + 1]}`;\r\n    } if (diferenca < 3650) {\r\n      return `${meses[atual.getMonth()]}/${atual.getFullYear()}`\r\n    }\r\n    return `${atual.getFullYear()}`\r\n  }\r\n\r\n  private async listaDeProdutos() {\r\n    let produtos = await this.produtoServico.lista();\r\n    produtos?.forEach(produto => {\r\n      this.produtos.push(produto);\r\n    })\r\n    this.produtosSelecionados = this.produtos;\r\n  }\r\n\r\n  private async listaDePedidosProdutos() {\r\n    let pedidosProdutos = await this.pedidoProdutoServico.lista();\r\n    pedidosProdutos?.forEach(pedidoProduto => {\r\n      this.pedidosProdutos.push(pedidoProduto);\r\n    })\r\n    this.pedidosProdutosSelecionados = this.pedidosProdutos\r\n    this.getValor_Total();\r\n  }\r\n\r\n  private async listaDePedidos() {\r\n    let pedidos = await this.pedidoServico.lista();\r\n    pedidos?.forEach(pedido => {\r\n      this.pedidos.push(pedido);\r\n    })\r\n    this.pedidosSelecionados = this.pedidos?.reverse();\r\n  }\r\n\r\n  private getValor_Total() {\r\n    let total = 0, positivo = 0, negativo = 0;\r\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\r\n      let val1 = total;\r\n      total += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\r\n      if (val1 > total) {\r\n        negativo += val1 - total\r\n      } else {\r\n        positivo += total - val1\r\n      }\r\n    })\r\n    this.valorTotal = total;\r\n    this.valorPositivo = positivo;\r\n    this.valorNegativo = negativo;\r\n  }\r\n\r\n  async atualizar() {\r\n    this.pedidosSelecionados = this.pedidos;\r\n    this.pedidosProdutosSelecionados = this.pedidosProdutos;\r\n    this.produtosSelecionados = this.produtos;\r\n    let categoria = new Number(this.categoriaSelecionado.split(\"-\")[0])\r\n    let dictPedidoSelecionado = this.filtraData();\r\n    let dictProdutoSelecionado = this.filtrarProduto(categoria)\r\n    let dictPedidoTemp: Map<Number, boolean> = new Map();\r\n    let save = this.pedidosProdutosSelecionados.filter(pedidoProduto => {\r\n      let val = false\r\n      if (dictPedidoSelecionado.get(pedidoProduto.pedido_id)) {\r\n        if (dictProdutoSelecionado.get(pedidoProduto.produto_id)) {\r\n          val = true\r\n        }\r\n      }\r\n      if (!dictPedidoTemp.get(pedidoProduto.pedido_id)) dictPedidoTemp.set(pedidoProduto.pedido_id, val)\r\n      return val;\r\n    })\r\n    this.pedidosProdutosSelecionados = save\r\n    this.pedidosSelecionados = this.pedidosSelecionados.filter(pedido => {\r\n      if (dictPedidoSelecionado.get(pedido.id)) return true\r\n      return false;\r\n    })\r\n    this.getValor_Total();\r\n    this.gerarGraficoBarra();\r\n    this.gerarGraficoArea(categoria);\r\n    this.gerarPie()\r\n  }\r\n\r\n  filtrarProduto(categoria_id: Number): Map<Number, boolean> {\r\n    let dictProdutoSelecionado: Map<Number, boolean> = new Map();\r\n    if (categoria_id.toString() === \"0\") {\r\n      this.produtosSelecionados.forEach(produto => {\r\n        dictProdutoSelecionado.set(produto.id, true);\r\n      })\r\n      return dictProdutoSelecionado\r\n    }\r\n    this.produtosSelecionados = this.produtosSelecionados.filter(produto => {\r\n      if (produto.categoria_id.toString() === categoria_id.toString()) {\r\n        dictProdutoSelecionado.set(produto.id, true)\r\n        return true\r\n      }\r\n      dictProdutoSelecionado.set(produto.id, false)\r\n      return false;\r\n    })\r\n    return dictProdutoSelecionado;\r\n  }\r\n\r\n  number(a: Number) {\r\n    return Number(a)\r\n  }\r\n\r\n\r\n  filtraData(): Map<Number, boolean> {\r\n    let dictPedidoSelecionado: Map<Number, boolean> = new Map();\r\n    this.pedidosSelecionados = this.pedidos.filter(result => {\r\n      let val = this.corrigirInicial(this.dataInicial) < new Date(result.data.toString()) && this.aumentar(this.dataFinal) > new Date(result.data.toString())\r\n      dictPedidoSelecionado.set(result.id, val)\r\n      return val\r\n    })\r\n    return dictPedidoSelecionado\r\n  }\r\n  corrigirInicial(data: String): Date {\r\n    let val = (new Date(String(data))).getTime() + 10800000 - 1;\r\n    return new Date(val)\r\n  }\r\n  aumentar(data: String): Date {\r\n    let val = (new Date(String(data))).getTime() + 86399999 + 10800000;\r\n    return new Date(val)\r\n  }\r\n}\r\n\r\n\r\n","<section class=\"page-section\" id=\"contact\" style=\"margin-top: 30px;\">\r\n    <div class=\"container2\">\r\n        <div class = \"filtrosChart\">\r\n            <div class=\"modelo1\">\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Data Inicio</label>\r\n                <input type=\"date\" onkeydown=\"return false\" id=\"dataI\" name=\"dataI\" [(ngModel)]=\"dataInicial\" (change) = \"atualizar()\">\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Data Final</label>\r\n                <input type=\"date\" onkeydown=\"return false\" id=\"dataF\" name=\"dataF\" [(ngModel)]=\"dataFinal\" (change) = \"atualizar()\">\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Produtos</label>\r\n                <select name=\"teste\" id=\"required\" class=\"form-control form-control-chosen-required\" (change)=\"atualizar()\" [(ngModel)] = \"categoriaSelecionado\" data-placeholder=\"CPF - Nome do cliente\" >\r\n                        <option>0- Todas</option>\r\n                        <option *ngFor=\"let categoria of categoriasMostradas; index as i\" id=\"{{categoria.id}}\">\r\n                            {{(i+1)+\"- \"+categoria.nome}}</option>\r\n                    </select>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelTotal\" style=\"display: block;\">Total</label>\r\n                <label for=\"labelTotalView\" style=\"display: block;\">{{number(valorTotal) | currency}}</label>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelSoma\" style=\"display: block;\">Entrada</label>\r\n                <label for=\"labelSomaView\" style=\"display: block;\">{{number(valorPositivo) | currency}}</label>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelSubtracao\" style=\"display: block;\">Saída</label>\r\n                <label for=\"labelSubtracaoView\" style=\"display: block;\">{{number(valorNegativo) | currency}}</label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div>\r\n            <google-chart\r\n            [title]=\"titleColum\"\r\n            [type]=\"columChart\"\r\n            [data]=\"dataColum\"\r\n            [width]=\"widthColum\"\r\n            [height]=\"heightColum\"\r\n            [options]=\"optionsColum\"\r\n            >\r\n            </google-chart>\r\n        </div>\r\n        <div class = \"charts\">\r\n            <google-chart\r\n            [title]=\"titleArea\"\r\n            [type]=\"areaChart\"\r\n            [data]=\"dataArea\"\r\n            [columns]=\"columnsNames\"\r\n            [options]=\"optionsArea\"\r\n            >\r\n            </google-chart>\r\n            <google-chart\r\n            [title]=\"titlePie\"\r\n            [type]=\"pieChart\"\r\n            [data]=\"dataPie\"\r\n            [columns]=\"columnNamesPie\"  \r\n            [options]=\"optionsPie\">\r\n            </google-chart>\r\n        </div>\r\n        <!--<div class=\"row \">\r\n            <div class=\"col-lg-8 col-xl-7\">\r\n            <div *ngIf=\"pedidos && pedidos.length == 0\" class=\"alert alert-primary\" role=\"alert\">\r\n                Não existem pedidos cadastrados\r\n            </div>\r\n            <table *ngIf=\"pedidos && pedidos.length > 0\" class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">ID do pedido</th>\r\n                    <th scope=\"col\">ID do cliente</th>\r\n                    <th scope=\"col\">Valor total</th>\r\n                    <th scope=\"col\">Data</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let pedido of pedidosMostrados.slice(0, 5)\">\r\n                    <th scope=\"row\">{{pedido.id}}</th>\r\n                    <td>{{pedido.cliente_id}}</td>\r\n                    <td>{{number(pedido.valor_total) | currency}}</td>\r\n                    <td>{{pedido.data}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <label class=\"naDireita\" routerLink=\"/lista-completa\">Mostrar tudo</label>\r\n            </table>\r\n            </div>\r\n        </div>-->\r\n    </div>\r\n</section>  "]},"metadata":{},"sourceType":"module"}