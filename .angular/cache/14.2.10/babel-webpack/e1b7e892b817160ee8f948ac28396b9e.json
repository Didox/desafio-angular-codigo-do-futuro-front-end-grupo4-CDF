{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { firstValueFrom } from 'rxjs';\nexport class IBGEServico {\n  constructor(http) {\n    this.http = http;\n  }\n\n  listaEstados() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let estados = yield firstValueFrom(_this.http.get(`${environment.ibge}/estados`));\n      return estados.sort((a, b) => {\n        return ('' + a.nome).localeCompare(b.nome.toString());\n      });\n    })();\n  }\n\n  listaMunicipiosPorEstado(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let municipios = yield firstValueFrom(_this2.http.get(`${environment.ibge}/estados/${id}/municipios`));\n      return municipios.sort((a, b) => {\n        return ('' + a.nome).localeCompare(b.nome.toString());\n      });\n    })();\n  }\n\n}","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,8BAA5B;AAGA,SAASC,cAAT,QAA+B,MAA/B;AAGA,OAAM,MAAOC,WAAP,CAAkB;EAEpBC,YAAoBC,IAApB,EAAmC;IAAf;EAAoB;;EAE3BC,YAAY;IAAA;;IAAA;MACrB,IAAIC,OAAO,SAA8BL,cAAc,CAAC,KAAI,CAACG,IAAL,CAAUG,GAAV,CAAwB,GAAGP,WAAW,CAACQ,IAAI,UAA3C,CAAD,CAAvD;MACA,OAAOF,OAAO,CAACG,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAS;QACzB,OAAO,CAAC,KAAKD,CAAC,CAACE,IAAR,EAAcC,aAAd,CAA4BF,CAAC,CAACC,IAAF,CAAOE,QAAP,EAA5B,CAAP;MACH,CAFM,CAAP;IAFqB;EAKxB;;EACYC,wBAAwB,CAACC,EAAD,EAAU;IAAA;;IAAA;MAC3C,IAAIC,UAAU,SAAiChB,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAA2B,GAAGP,WAAW,CAACQ,IAAI,YAAYQ,EAAE,aAA5D,CAAD,CAA7D;MAEA,OAAOC,UAAU,CAACR,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAS;QAC5B,OAAO,CAAC,KAAKD,CAAC,CAACE,IAAR,EAAcC,aAAd,CAA4BF,CAAC,CAACC,IAAF,CAAOE,QAAP,EAA5B,CAAP;MACH,CAFM,CAAP;IAH2C;EAM9C;;AAhBmB","names":["environment","firstValueFrom","IBGEServico","constructor","http","listaEstados","estados","get","ibge","sort","a","b","nome","localeCompare","toString","listaMunicipiosPorEstado","id","municipios"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\servicos\\IBGEServico.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Estado } from '../models/estado';\r\n\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { Municipio } from '../models/municipio';\r\n\r\nexport class IBGEServico{\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    public async listaEstados(): Promise<Estado[] | undefined> {\r\n        let estados:Estado[] | undefined = await firstValueFrom(this.http.get<Estado[]>(`${environment.ibge}/estados`))\r\n        return estados.sort((a, b) =>{\r\n            return ('' + a.nome).localeCompare(b.nome.toString());\r\n        });\r\n    }\r\n    public async listaMunicipiosPorEstado(id:Number): Promise<Municipio[] | undefined> {\r\n        let municipios:Municipio[] | undefined = await firstValueFrom(this.http.get<Municipio[]>(`${environment.ibge}/estados/${id}/municipios`))\r\n\r\n        return municipios.sort((a, b) =>{\r\n            return ('' + a.nome).localeCompare(b.nome.toString());\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}