{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { firstValueFrom } from 'rxjs';\nimport { ProdutoServico } from './produtoServico';\nexport class PedidoProdutoServico {\n  constructor(http) {\n    this.http = http;\n  }\n\n  lista() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidosProdutos = yield firstValueFrom(_this.http.get(`${environment.api}/pedidosProdutos`));\n      return pedidosProdutos;\n    })();\n  }\n\n  criar(pedidoProduto) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"o\");\n      let pedidoProdutoRest = yield firstValueFrom(_this2.http.post(`${environment.api}/pedidosProdutos/`, pedidoProduto));\n      let produto = yield new ProdutoServico(_this2.http).buscaPorId(pedidoProduto.produto_id);\n      let qtd = pedidoProduto.quantidade;\n\n      if (pedidoProduto.valor > 0) {\n        qtd = new Number(Number(qtd));\n      }\n\n      console.log(produto);\n      if (produto?.qtd_estoque) produto.qtd_estoque = new Number(Number(produto?.qtd_estoque) - Number(qtd));\n      if (produto) yield new ProdutoServico(_this2.http).update(produto);\n      return pedidoProdutoRest;\n    })();\n  }\n\n  update(pedidoProduto) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidoProdutoRest = yield firstValueFrom(_this3.http.put(`${environment.api}/pedidosProdutos/${pedidoProduto.id}`, pedidoProduto));\n      return pedidoProdutoRest;\n    })();\n  }\n\n  buscaPorId(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this4.http.get(`${environment.api}/pedidosProdutos/${id}`));\n    })();\n  }\n\n  getLast() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidoProduto = yield firstValueFrom(_this5.http.get(`${environment.api}/pedidosProdutosLast`));\n      return pedidoProduto.at(0);\n    })();\n  }\n\n  excluirPorId(id) {\n    firstValueFrom(this.http.delete(`${environment.api}/pedidosProdutos/${id}`));\n  }\n\n}","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,8BAA5B;AAGA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAM,MAAOC,oBAAP,CAA2B;EAE7BC,YAAoBC,IAApB,EAAmC;IAAf;EAAoB;;EAE3BC,KAAK;IAAA;;IAAA;MACd,IAAIC,eAAe,SAAqCN,cAAc,CAAC,KAAI,CAACI,IAAL,CAAUG,GAAV,CAA+B,GAAGR,WAAW,CAACS,GAAG,kBAAjD,CAAD,CAAtE;MACA,OAAOF,eAAP;IAFc;EAGjB;;EAEYG,KAAK,CAACC,aAAD,EAA4B;IAAA;;IAAA;MAC1CC,OAAO,CAACC,GAAR,CAAY,GAAZ;MACA,IAAIC,iBAAiB,SAAmCb,cAAc,CAAC,MAAI,CAACI,IAAL,CAAUU,IAAV,CAA8B,GAAGf,WAAW,CAACS,GAAG,mBAAhD,EAAqEE,aAArE,CAAD,CAAtE;MACA,IAAIK,OAAO,SAAS,IAAId,cAAJ,CAAmB,MAAI,CAACG,IAAxB,EAA8BY,UAA9B,CAAyCN,aAAa,CAACO,UAAvD,CAApB;MACA,IAAIC,GAAG,GAACR,aAAa,CAACS,UAAtB;;MACA,IAAGT,aAAa,CAACU,KAAd,GAAoB,CAAvB,EAAyB;QACrBF,GAAG,GAAE,IAAIG,MAAJ,CAAWA,MAAM,CAACH,GAAD,CAAjB,CAAL;MACH;;MACDP,OAAO,CAACC,GAAR,CAAYG,OAAZ;MACA,IAAGA,OAAO,EAAEO,WAAZ,EAAyBP,OAAO,CAACO,WAAR,GAAoB,IAAID,MAAJ,CAAWA,MAAM,CAACN,OAAO,EAAEO,WAAV,CAAN,GAA6BD,MAAM,CAACH,GAAD,CAA9C,CAApB;MAEzB,IAAGH,OAAH,EAAY,MAAM,IAAId,cAAJ,CAAmB,MAAI,CAACG,IAAxB,EAA8BmB,MAA9B,CAAqCR,OAArC,CAAN;MACZ,OAAOF,iBAAP;IAZ0C;EAa7C;;EAEYU,MAAM,CAACb,aAAD,EAA4B;IAAA;;IAAA;MAC3C,IAAIG,iBAAiB,SAAmCb,cAAc,CAAC,MAAI,CAACI,IAAL,CAAUoB,GAAV,CAA6B,GAAGzB,WAAW,CAACS,GAAG,oBAAoBE,aAAa,CAACe,EAAE,EAAnF,EAAuFf,aAAvF,CAAD,CAAtE;MACA,OAAOG,iBAAP;IAF2C;EAG9C;;EAEYG,UAAU,CAACS,EAAD,EAAU;IAAA;;IAAA;MAC7B,aAAazB,cAAc,CAAC,MAAI,CAACI,IAAL,CAAUG,GAAV,CAAyC,GAAGR,WAAW,CAACS,GAAG,oBAAoBiB,EAAE,EAAjF,CAAD,CAA3B;IAD6B;EAEhC;;EAEYC,OAAO;IAAA;;IAAA;MAChB,IAAIhB,aAAa,SAAqCV,cAAc,CAAC,MAAI,CAACI,IAAL,CAAUG,GAAV,CAA+B,GAAGR,WAAW,CAACS,GAAG,sBAAjD,CAAD,CAApE;MACA,OAAOE,aAAa,CAACiB,EAAd,CAAiB,CAAjB,CAAP;IAFgB;EAGnB;;EAEMC,YAAY,CAACH,EAAD,EAAU;IACzBzB,cAAc,CAAC,KAAKI,IAAL,CAAUyB,MAAV,CAAiB,GAAG9B,WAAW,CAACS,GAAG,oBAAoBiB,EAAE,EAAzD,CAAD,CAAd;EACH;;AAxC4B","names":["environment","firstValueFrom","ProdutoServico","PedidoProdutoServico","constructor","http","lista","pedidosProdutos","get","api","criar","pedidoProduto","console","log","pedidoProdutoRest","post","produto","buscaPorId","produto_id","qtd","quantidade","valor","Number","qtd_estoque","update","put","id","getLast","at","excluirPorId","delete"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\servicos\\pedidoProdutoServico.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PedidoProduto } from \"../models/pedidoProduto\";\r\n\r\nimport { firstValueFrom } from 'rxjs';\r\nimport { ProdutoServico } from './produtoServico';\r\n\r\nexport class PedidoProdutoServico{\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    public async lista(): Promise<PedidoProduto[] | undefined> {\r\n        let pedidosProdutos:PedidoProduto[] | undefined = await firstValueFrom(this.http.get<PedidoProduto[]>(`${environment.api}/pedidosProdutos`))\r\n        return pedidosProdutos;\r\n    }\r\n\r\n    public async criar(pedidoProduto:PedidoProduto): Promise<PedidoProduto | undefined> {\r\n        console.log(\"o\")\r\n        let pedidoProdutoRest:PedidoProduto | undefined = await firstValueFrom(this.http.post<PedidoProduto>(`${environment.api}/pedidosProdutos/`, pedidoProduto))\r\n        let produto = await new ProdutoServico(this.http).buscaPorId(pedidoProduto.produto_id);\r\n        let qtd=pedidoProduto.quantidade\r\n        if(pedidoProduto.valor>0){\r\n            qtd =new Number(Number(qtd))\r\n        }\r\n        console.log(produto)\r\n        if(produto?.qtd_estoque) produto.qtd_estoque=new Number(Number(produto?.qtd_estoque)-Number(qtd))\r\n        \r\n        if(produto) await new ProdutoServico(this.http).update(produto)\r\n        return pedidoProdutoRest;\r\n    }\r\n\r\n    public async update(pedidoProduto:PedidoProduto): Promise<PedidoProduto | undefined> {\r\n        let pedidoProdutoRest:PedidoProduto | undefined = await firstValueFrom(this.http.put<PedidoProduto>(`${environment.api}/pedidosProdutos/${pedidoProduto.id}`, pedidoProduto))\r\n        return pedidoProdutoRest;\r\n    }\r\n\r\n    public async buscaPorId(id:Number): Promise<PedidoProduto | undefined> {\r\n        return await firstValueFrom(this.http.get<PedidoProduto | undefined>(`${environment.api}/pedidosProdutos/${id}`))\r\n    }\r\n\r\n    public async getLast(): Promise<PedidoProduto | undefined> {\r\n        let pedidoProduto:PedidoProduto[] | undefined = await firstValueFrom(this.http.get<PedidoProduto[]>(`${environment.api}/pedidosProdutosLast`))\r\n        return pedidoProduto.at(0);\r\n    }\r\n\r\n    public excluirPorId(id:Number) {\r\n        firstValueFrom(this.http.delete(`${environment.api}/pedidosProdutos/${id}`))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}