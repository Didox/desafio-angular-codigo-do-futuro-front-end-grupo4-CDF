{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ClienteServico } from 'src/app/servicos/clienteServico';\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\n\nfunction ListaPedidosCompletaComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" N\\u00E3o existem pedidos cadastrados \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ListaPedidosCompletaComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const pedido_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(pedido_r3.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.nomeCliente(pedido_r3.cliente_id));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 4, ctx_r2.number(pedido_r3.valor_total)));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(10, 6, pedido_r3.data, \"dd/MM/yyyy HH:mm\"));\n  }\n}\n\nfunction ListaPedidosCompletaComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 7)(1, \"thead\")(2, \"tr\")(3, \"th\", 8);\n    i0.ɵɵtext(4, \"ID do pedido\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 8);\n    i0.ɵɵtext(6, \"Nome do cliente\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 8);\n    i0.ɵɵtext(8, \"Valor total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 8);\n    i0.ɵɵtext(10, \"Data\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, ListaPedidosCompletaComponent_table_5_tr_12_Template, 11, 9, \"tr\", 9);\n    i0.ɵɵelementStart(13, \"tr\")(14, \"th\", 10);\n    i0.ɵɵtext(15, \"Soma Total\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"td\");\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"td\")(21, \"td\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"label\", 11);\n    i0.ɵɵtext(23, \"Voltar\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.pedidos);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 2, ctx_r1.somaTotal()));\n  }\n}\n\nexport class ListaPedidosCompletaComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.pedidosServico = {};\n    this.pedidos = [];\n    this.clienteServico = {};\n    this.nomeClienteArray = [];\n    this.dict = new Map();\n  }\n\n  ngOnInit() {\n    this.pedidosServico = new PedidoServico(this.http);\n    this.clienteServico = new ClienteServico(this.http);\n    this.listaDePedidos();\n  }\n\n  nomeCliente(id) {\n    let cli = 1;\n    console.log(id);\n    if (id) cli = this.dict.get(id);\n    if (cli) return this.nomeClienteArray[cli];\n    return \"asd\";\n  }\n\n  listaDePedidos() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let clientes = yield _this.clienteServico.lista();\n      clientes?.forEach(cliente => {\n        _this.nomeClienteArray.push(cliente.nome);\n\n        _this.dict.set(cliente.id, _this.nomeClienteArray.length - 1);\n      });\n      _this.pedidos = yield _this.pedidosServico.lista();\n    })();\n  }\n\n  number(a) {\n    return Number(a);\n  }\n\n  somaTotal() {\n    let valorTotal = 0;\n    this.pedidos?.forEach(index => {\n      valorTotal += Number(index.valor_total);\n    });\n    return Number(valorTotal);\n  }\n\n}\n\nListaPedidosCompletaComponent.ɵfac = function ListaPedidosCompletaComponent_Factory(t) {\n  return new (t || ListaPedidosCompletaComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nListaPedidosCompletaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListaPedidosCompletaComponent,\n  selectors: [[\"app-lista-pedidos\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"contact\", 1, \"page-section\", 2, \"margin-top\", \"100px\"], [1, \"container\"], [1, \"row\"], [1, \"col-lg-8\", \"col-xl-7\"], [\"class\", \"alert alert-primary\", \"role\", \"alert\", 4, \"ngIf\"], [\"class\", \"table\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-primary\"], [1, \"table\"], [\"scope\", \"col\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"], [\"routerLink\", \"/pedidos\", 1, \"naDireita\"]],\n  template: function ListaPedidosCompletaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n      i0.ɵɵtemplate(4, ListaPedidosCompletaComponent_div_4_Template, 2, 0, \"div\", 4);\n      i0.ɵɵtemplate(5, ListaPedidosCompletaComponent_table_5_Template, 24, 4, \"table\", 5);\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.pedidos && ctx.pedidos.length == 0);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.pedidos && ctx.pedidos.length > 0);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.RouterLink, i3.CurrencyPipe, i3.DatePipe],\n  styles: [\".modelo[_ngcontent-%COMP%]{\\r\\n    display: inline-block;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]{\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]:hover{\\r\\n    color: rgb(23, 35, 209);\\r\\n    transition: 0.5s;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3RhLXBlZGlkb3MtY29tcGxldGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6Imxpc3RhLXBlZGlkb3MtY29tcGxldGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RlbG97XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuLm5hRGlyZWl0YXtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5uYURpcmVpdGE6aG92ZXJ7XHJcbiAgICBjb2xvcjogcmdiKDIzLCAzNSwgMjA5KTtcclxuICAgIHRyYW5zaXRpb246IDAuNXM7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["ClienteServico","PedidoServico","i0","ListaPedidosCompletaComponent","constructor","router","http","Map","ngOnInit","pedidosServico","clienteServico","listaDePedidos","nomeCliente","id","cli","console","log","dict","get","nomeClienteArray","clientes","lista","forEach","cliente","push","nome","set","length","pedidos","number","a","Number","somaTotal","valorTotal","index","valor_total","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\lista-pedidos-completa\\lista-pedidos-completa.component.ts","C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\lista-pedidos-completa\\lista-pedidos-completa.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Pedido } from 'src/app/models/pedido';\r\nimport { ClienteServico } from 'src/app/servicos/clienteServico';\r\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\r\n\r\n@Component({\r\n  selector: 'app-lista-pedidos',\r\n  templateUrl: './lista-pedidos-completa.component.html',\r\n  styleUrls: ['./lista-pedidos-completa.component.css']\r\n})\r\nexport class ListaPedidosCompletaComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  public pedidosServico: PedidoServico = {} as PedidoServico;\r\n  public pedidos: Pedido[] | undefined = [];\r\n  public clienteServico: ClienteServico = {} as ClienteServico;\r\n  public nomeClienteArray: String[] = [];\r\n  public dict: Map<Number,number> = new Map();\r\n\r\n  ngOnInit(): void {\r\n    this.pedidosServico = new PedidoServico(this.http);\r\n    this.clienteServico = new ClienteServico(this.http);\r\n    this.listaDePedidos();\r\n  }\r\n  \r\n  public nomeCliente(id: Number|undefined){\r\n    let cli:number|undefined=1\r\n    console.log(id)\r\n    if(id) cli=this.dict.get(id)\r\n    if(cli) return this.nomeClienteArray[cli]\r\n    return \"asd\"\r\n\r\n  }\r\n\r\n  private async listaDePedidos(){\r\n    let clientes = await this.clienteServico.lista();\r\n    clientes?.forEach(cliente=>{\r\n      this.nomeClienteArray.push(cliente.nome)\r\n      this.dict.set(cliente.id,this.nomeClienteArray.length-1)\r\n    })\r\n    this.pedidos = await this.pedidosServico.lista();\r\n  }\r\n  number (a : Number){\r\n    return Number(a)\r\n  }\r\n\r\n  somaTotal(){\r\n    let valorTotal = 0;\r\n    this.pedidos?.forEach(index => {\r\n      valorTotal += Number(index.valor_total);\r\n    })\r\n    return Number(valorTotal)\r\n  }\r\n\r\n}\r\n","<section class=\"page-section\" id=\"contact\" style=\"margin-top: 100px;\">\r\n    <div class=\"container\">\r\n        <div class=\"row \">\r\n            <div class=\"col-lg-8 col-xl-7\">\r\n            <div *ngIf=\"pedidos && pedidos.length == 0\" class=\"alert alert-primary\" role=\"alert\">\r\n                Não existem pedidos cadastrados\r\n            </div>\r\n            <table *ngIf=\"pedidos && pedidos.length > 0\" class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">ID do pedido</th>\r\n                    <th scope=\"col\">Nome do cliente</th>\r\n                    <th scope=\"col\">Valor total</th>\r\n                    <th scope=\"col\">Data</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let pedido of pedidos; let i = index\">\r\n                    <th scope=\"row\">{{pedido.id}}</th>\r\n                    <td>{{nomeCliente(pedido.cliente_id)}}</td>\r\n                    <td>{{number(pedido.valor_total) | currency}}</td>\r\n                    <td>{{pedido.data | date: 'dd/MM/yyyy HH:mm'}}</td>\r\n                    <tr>\r\n                        <th scope = \"row\">Soma Total</th>\r\n                        <td></td>\r\n                        <td>{{somaTotal() | currency}}</td>\r\n                        <td></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n                <label class=\"naDireita\" routerLink=\"/pedidos\">Voltar</label>\r\n            </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n"]},"metadata":{},"sourceType":"module"}