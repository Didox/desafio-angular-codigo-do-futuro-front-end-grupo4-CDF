{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ClienteServico } from 'src/app/servicos/clienteServico';\nimport { IBGEServico } from 'src/app/servicos/IBGEServico';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\n\nfunction FormClienteComponent_form_3_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const estado_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"id\", estado_r3.id);\n    i0.ɵɵproperty(\"selected\", i_r4 + 1 + \"- \" + estado_r3.nome === ctx_r1.estadoSelecionado);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", i_r4 + 1 + \"- \" + estado_r3.nome, \" \");\n  }\n}\n\nfunction FormClienteComponent_form_3_option_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const municipio_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵpropertyInterpolate(\"id\", municipio_r5.id);\n    i0.ɵɵproperty(\"selected\", i_r6 + 1 == ctx_r2.number(ctx_r2.municipioSelecionado.split(\"-\")[0]));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r6 + 1 + \"- \" + municipio_r5.nome, \"\");\n  }\n}\n\nfunction FormClienteComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 4)(1, \"div\", 5)(2, \"div\", 6)(3, \"label\", 7);\n    i0.ɵɵtext(4, \"Nome\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.cliente.nome = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 6)(7, \"label\", 7);\n    i0.ɵɵtext(8, \"Telefone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"input\", 9);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.cliente.telefone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 6)(11, \"label\", 7);\n    i0.ɵɵtext(12, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 10);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.cliente.email = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"div\", 11)(15, \"div\", 6)(16, \"label\", 7);\n    i0.ɵɵtext(17, \"CPF\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.cliente.cpf = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 6)(20, \"label\", 7);\n    i0.ɵɵtext(21, \"CEP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"input\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_22_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.cliente.cep = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 6)(24, \"label\", 7);\n    i0.ɵɵtext(25, \"Logradouro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(26, \"input\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_26_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.cliente.logradouro = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(27, \"div\", 15)(28, \"div\", 6)(29, \"label\", 7);\n    i0.ɵɵtext(30, \"N\\u00FAmero\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_31_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.cliente.numero = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(32, \"div\", 6)(33, \"label\", 7);\n    i0.ɵɵtext(34, \"Bairro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_35_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.cliente.bairro = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 7);\n    i0.ɵɵtext(38, \"Estado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(39, \"select\", 18);\n    i0.ɵɵlistener(\"change\", function FormClienteComponent_form_3_Template_select_change_39_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r16.importarCidades());\n    })(\"ngModelChange\", function FormClienteComponent_form_3_Template_select_ngModelChange_39_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.estadoSelecionado = $event);\n    });\n    i0.ɵɵelement(40, \"option\");\n    i0.ɵɵtemplate(41, FormClienteComponent_form_3_option_41_Template, 2, 3, \"option\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"div\", 20)(43, \"div\", 6)(44, \"label\", 7);\n    i0.ɵɵtext(45, \"Cidade\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(46, \"select\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_select_ngModelChange_46_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r18 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r18.municipioSelecionado = $event);\n    });\n    i0.ɵɵelement(47, \"option\");\n    i0.ɵɵtemplate(48, FormClienteComponent_form_3_option_48_Template, 2, 3, \"option\", 19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(49, \"div\", 6)(50, \"label\", 7);\n    i0.ɵɵtext(51, \"Complemento\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function FormClienteComponent_form_3_Template_input_ngModelChange_52_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r19.cliente.complemento = $event);\n    });\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(53, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function FormClienteComponent_form_3_Template_button_click_53_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r20.registrar());\n    });\n    i0.ɵɵtext(54);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.nome);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.telefone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.email);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.cpf);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.cep);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.logradouro);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.numero);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.bairro);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.estadoSelecionado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.estados);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.municipioSelecionado);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.municipios);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.cliente.complemento);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.tituloDoBotao);\n  }\n}\n\nexport class FormClienteComponent {\n  constructor(router, http, routerParams) {\n    this.router = router;\n    this.http = http;\n    this.routerParams = routerParams;\n    this.tituloDoBotao = \"Cadastrar\";\n    this.clienteServico = {};\n    this.cliente = {};\n    this.IBGEServico = {};\n    this.estados = [];\n    this.municipios = [];\n    this.estadoSelecionado = \"1- Acre\";\n    this.municipioSelecionado = \"1- \";\n  }\n\n  ngOnInit() {\n    this.clienteServico = new ClienteServico(this.http);\n    this.IBGEServico = new IBGEServico(this.http);\n    let id = this.routerParams.snapshot.params['id'];\n\n    if (id) {\n      this.editaCliente(id);\n    }\n\n    this.importarEstados();\n    console.log(this.estadoSelecionado);\n    console.log(this.municipioSelecionado);\n  }\n\n  importarEstados() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let estados = yield _this.IBGEServico.listaEstados();\n\n      if (!estados) {} else {\n        _this.estados = estados;\n      }\n\n      _this.importarCidades();\n    })();\n  }\n\n  importarCidades() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.municipios = yield _this2.IBGEServico.listaMunicipiosPorEstado(Number(_this2.estados.at(Number(_this2.estadoSelecionado.split(\"-\")[0]) - 1)?.id));\n      _this2.municipioSelecionado = \"1- \";\n      console.log(_this2.estadoSelecionado);\n      console.log(_this2.municipioSelecionado);\n    })();\n  }\n\n  editaCliente(id) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.tituloDoBotao = \"Alterar\";\n      _this3.cliente = yield _this3.clienteServico.buscaPorId(id);\n    })();\n  }\n\n  registrar() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.cliente && _this4.cliente.id > 0) {\n        _this4.cliente.cidade = _this4.estadoSelecionado.split(\"-\")[1].trim();\n        _this4.cliente.cidade = _this4.municipioSelecionado.split(\"-\")[1].trim();\n\n        let cliente = _this4.verificaUndefined();\n\n        if (cliente) {\n          yield _this4.clienteServico.update(cliente);\n\n          _this4.router.navigateByUrl(\"/clientes\");\n        }\n      } else {\n        if (!_this4.cliente) {} else {\n          let cliente = _this4.verificaUndefined();\n\n          if (cliente) {\n            yield _this4.clienteServico.criar(_this4.cliente);\n\n            _this4.router.navigateByUrl(\"/clientes\");\n          }\n        }\n      }\n    })();\n  }\n\n  verificaUndefined() {\n    let id = 0;\n    let nome = \"\";\n    let telefone = \"\";\n    let email = \"\";\n    let cpf = \"\";\n    let cep = \"\";\n    let logradouro = \"\";\n    let bairro = \"\";\n    let numero = 0;\n    let cidade = \"\";\n    let tipoCidade = this.municipios?.at(Number(this.municipioSelecionado.split(\"-\")[0]) - 1)?.nome;\n    let estado = this.estadoSelecionado.split(\"-\")[1].trim();\n    let complemento = \"\";\n    if (this.cliente?.id) id = this.cliente.id;\n    if (this.cliente?.nome && !(this.cliente.nome === \"\")) nome = this.cliente.nome;else {\n      alert(\"Por favor digite um nome válido\");\n      return undefined;\n    }\n    if (this.cliente?.telefone && !(this.cliente.telefone === \"\")) telefone = this.cliente.telefone;else {\n      alert(\"Por favor digite um telefone válido\");\n      return undefined;\n    }\n    if (this.cliente?.email && !(this.cliente.email === \"\")) email = this.cliente.email;else {\n      alert(\"Por favor digite um email válido\");\n      return undefined;\n    }\n    if (this.cliente?.cpf && !(this.cliente.cpf === \"\")) cpf = this.cliente.cpf;else {\n      alert(\"Por favor digite um CPF válido\");\n      return undefined;\n    }\n    if (this.cliente?.cep && !(this.cliente.cep === \"\")) cep = this.cliente.cep;else {\n      alert(\"Por favor digite um CEP válido\");\n      return undefined;\n    }\n    if (this.cliente?.logradouro && !(this.cliente.logradouro === \"\")) logradouro = this.cliente.logradouro;else {\n      alert(\"Por favor digite um logradouro válido\");\n      return undefined;\n    }\n    if (this.cliente?.numero && !(this.cliente.numero === 0)) numero = this.cliente.numero;else {\n      alert(\"Por favor digite um número válido\");\n      return undefined;\n    }\n    if (this.cliente?.bairro && !(this.cliente.bairro === \"\")) bairro = this.cliente.bairro;else {\n      alert(\"Por favor digite um bairro válido\");\n      return undefined;\n    }\n    if (tipoCidade) cidade = tipoCidade;\n    if (this.cliente?.estado) estado = this.cliente.estado;\n    if (this.cliente?.complemento) complemento = this.cliente.complemento;\n    let cliente = {\n      id: id,\n      nome: nome,\n      telefone: telefone,\n      email: email,\n      cpf: cpf,\n      cep: cep,\n      logradouro: logradouro,\n      numero: numero,\n      bairro: bairro,\n      cidade: cidade,\n      estado: estado,\n      complemento: complemento\n    };\n    return cliente;\n  }\n\n  number(val) {\n    return Number(val);\n  }\n\n}\n\nFormClienteComponent.ɵfac = function FormClienteComponent_Factory(t) {\n  return new (t || FormClienteComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\n\nFormClienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormClienteComponent,\n  selectors: [[\"app-form-cliente\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[\"id\", \"contact\", 1, \"page-section\", 2, \"margin-top\", \"5px\"], [1, \"container\"], [1, \"col-lg-8\", \"col-xl-7\"], [\"class\", \"form\", \"autocomplete\", \"off\", 4, \"ngIf\"], [\"autocomplete\", \"off\", 1, \"form\"], [1, \"coluna1\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\", 2, \"padding\", \"10px\"], [\"type\", \"text\", \"id\", \"nome-cliente\", \"name\", \"nome-cliente\", \"placeholder\", \"Insira seu nome\", \"autocomplete\", \"off\", \"readonly\", \"\", \"onfocus\", \"this.removeAttribute('readonly');\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"telefone-cliente\", \"name\", \"telefone-cliente\", \"placeholder\", \"Insira seu telefone\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"email-cliente\", \"name\", \"email-cliente\", \"placeholder\", \"Insira seu email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"coluna2\"], [\"type\", \"text\", \"id\", \"cpf-cliente\", \"name\", \"cpf-cliente\", \"placeholder\", \"Insira seu CPF\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"cep-cliente\", \"name\", \"cep-cliente\", \"placeholder\", \"Insira seu CEP\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"logradouro-cliente\", \"name\", \"logradouro-cliente\", \"placeholder\", \"Insira seu logradouro\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"coluna3\"], [\"type\", \"text\", \"id\", \"numero-cliente\", \"name\", \"numero-cliente\", \"placeholder\", \"Insira seu n\\u00FAmero\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"bairro-cliente\", \"name\", \"bairro-cliente\", \"placeholder\", \"Insira seu bairro\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"teste\", \"id\", \"required\", \"data-placeholder\", \"CPF - Nome do cliente\", 1, \"form-control\", \"form-control-chosen-required\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"id\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [1, \"coluna4\"], [\"name\", \"teste\", \"id\", \"required\", \"data-placeholder\", \"CPF - Nome do cliente\", 1, \"form-control\", \"form-control-chosen-required\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"id\", \"complemento-cliente\", \"name\", \"complemento-cliente\", \"placeholder\", \"Insira seu complemento\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"submitButton\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-xl\", \"m-3\", 3, \"click\"], [3, \"id\", \"selected\"]],\n  template: function FormClienteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵtemplate(3, FormClienteComponent_form_3_Template, 55, 14, \"form\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.cliente);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.ɵNgNoValidate, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm],\n  styles: [\".form[_ngcontent-%COMP%]{\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.coluna1[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.coluna2[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.coluna3[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.coluna4[_ngcontent-%COMP%]{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.form-group[_ngcontent-%COMP%]{\\r\\n    margin: 10px;\\r\\n}\\r\\n\\r\\n.col-lg-8[_ngcontent-%COMP%] {\\r\\n    flex: 0 0 auto;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.page-section[_ngcontent-%COMP%]{\\r\\n    display: grid;\\r\\n    justify-content: center;\\r\\n    margin-top: 5px;\\r\\n    padding-bottom: 50px;\\r\\n    padding-top: 50px;\\r\\n    margin-bottom: 5px;\\r\\n    \\r\\n    margin-right: 6px;\\r\\n    margin-left: 6px\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%]{\\r\\n    background: #f8f8f8;\\r\\n    border-radius: 10px;\\r\\n    text-align-last: left;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcm0tY2xpZW50ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBQ0E7SUFDSSxhQUFhO0FBQ2pCOztBQUNBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztBQUNmOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixlQUFlO0lBQ2Ysb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixrQkFBa0I7O0lBRWxCLGlCQUFpQjtJQUNqQjtBQUNKOztBQUVBO0lBQ0ksbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixxQkFBcUI7QUFDekIiLCJmaWxlIjoiZm9ybS1jbGllbnRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY29sdW5hMXtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5jb2x1bmEye1xyXG4gICAgZGlzcGxheTogZmxleDtcclxufVxyXG4uY29sdW5hM3tcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuLmNvbHVuYTR7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cHtcclxuICAgIG1hcmdpbjogMTBweDtcclxufVxyXG5cclxuLmNvbC1sZy04IHtcclxuICAgIGZsZXg6IDAgMCBhdXRvO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdlLXNlY3Rpb257XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogNTBweDtcclxuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICAgXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDZweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA2cHhcclxufVxyXG5cclxuLmNvbnRhaW5lcntcclxuICAgIGJhY2tncm91bmQ6ICNmOGY4Zjg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgdGV4dC1hbGlnbi1sYXN0OiBsZWZ0O1xyXG59Il19 */\"]\n});","map":{"version":3,"mappings":"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","names":["ClienteServico","IBGEServico","i0","FormClienteComponent","constructor","router","http","routerParams","ngOnInit","clienteServico","id","snapshot","params","editaCliente","importarEstados","console","log","estadoSelecionado","municipioSelecionado","estados","listaEstados","importarCidades","municipios","listaMunicipiosPorEstado","Number","at","split","tituloDoBotao","cliente","buscaPorId","registrar","cidade","trim","verificaUndefined","update","navigateByUrl","criar","nome","telefone","email","cpf","cep","logradouro","bairro","numero","tipoCidade","estado","complemento","alert","undefined","number","val","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\form-cliente\\form-cliente.component.ts","C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\form-cliente\\form-cliente.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { VirtualTimeScheduler } from 'rxjs';\r\nimport { Cliente } from 'src/app/models/cliente';\r\nimport { Estado } from 'src/app/models/estado';\r\nimport { Municipio } from 'src/app/models/municipio';\r\nimport { ClienteServico } from 'src/app/servicos/clienteServico';\r\nimport { IBGEServico } from 'src/app/servicos/IBGEServico';\r\n\r\n@Component({\r\n  selector: 'app-form-cliente',\r\n  templateUrl: './form-cliente.component.html',\r\n  styleUrls: ['./form-cliente.component.css']\r\n})\r\nexport class FormClienteComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n    private routerParams: ActivatedRoute,\r\n  ) { }\r\n\r\n  public tituloDoBotao:String = \"Cadastrar\";\r\n  private clienteServico: ClienteServico = {} as ClienteServico;\r\n  public cliente:Cliente | undefined = {} as Cliente;\r\n  public IBGEServico: IBGEServico={} as IBGEServico;\r\n  public estados:Estado[]=[];\r\n  public municipios:Municipio[]|undefined=[];\r\n  public estadoSelecionado: String=\"1- Acre\";\r\n  public municipioSelecionado: String=\"1- \";\r\n  ngOnInit(): void {\r\n    this.clienteServico = new ClienteServico(this.http);\r\n    this.IBGEServico= new IBGEServico(this.http);\r\n    let id:Number = this.routerParams.snapshot.params['id'];\r\n    if(id){\r\n      this.editaCliente(id);\r\n    }\r\n    this.importarEstados();\r\n    console.log(this.estadoSelecionado)\r\n    console.log(this.municipioSelecionado)\r\n  }\r\n\r\n  private async importarEstados(){\r\n    let estados = await this.IBGEServico.listaEstados();\r\n    if(!estados){}else{\r\n      this.estados=estados;\r\n    }\r\n    this.importarCidades();\r\n  }\r\n\r\n  public async importarCidades(){\r\n    this.municipios= await this.IBGEServico.listaMunicipiosPorEstado(Number(this.estados.at(Number(this.estadoSelecionado.split(\"-\")[0])-1)?.id));\r\n   \r\n    this.municipioSelecionado=\"1- \";\r\n    console.log(this.estadoSelecionado)\r\n    console.log(this.municipioSelecionado)\r\n  }\r\n\r\n  private async editaCliente(id:Number){\r\n    this.tituloDoBotao = \"Alterar\";\r\n    this.cliente = await this.clienteServico.buscaPorId(id);\r\n  }\r\n\r\n   async registrar(){\r\n    if(this.cliente && this.cliente.id > 0){\r\n      this.cliente.cidade=this.estadoSelecionado.split(\"-\")[1].trim()\r\n      this.cliente.cidade=this.municipioSelecionado.split(\"-\")[1].trim()\r\n      let cliente = this.verificaUndefined()\r\n        if(cliente){\r\n          await this.clienteServico.update(cliente);\r\n          this.router.navigateByUrl(\"/clientes\");\r\n        }\r\n    }\r\n    else{\r\n      if(!this.cliente){}\r\n      else{\r\n        let cliente = this.verificaUndefined()\r\n        if(cliente){\r\n          await this.clienteServico.criar(this.cliente);\r\n          this.router.navigateByUrl(\"/clientes\");\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  verificaUndefined(){\r\n    let id:Number = 0;\r\n    let nome:String = \"\";\r\n    let telefone:String = \"\";\r\n    let email:String = \"\";\r\n    let cpf:String = \"\";\r\n    let cep:String = \"\";\r\n    let logradouro:String = \"\";\r\n    let bairro:String =\"\";\r\n    let numero:Number = 0;\r\n    let cidade:String= \"\"\r\n    let tipoCidade=this.municipios?.at(Number(this.municipioSelecionado.split(\"-\")[0])-1)?.nome;\r\n    let estado:String= this.estadoSelecionado.split(\"-\")[1].trim();\r\n\r\n    let complemento:String = \"\";\r\n\r\n    if(this.cliente?.id) id = this.cliente.id;\r\n\r\n    if(this.cliente?.nome && !(this.cliente.nome ===\"\")) nome = this.cliente.nome;\r\n    else{\r\n      alert(\"Por favor digite um nome válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.telefone && !(this.cliente.telefone === \"\")) telefone = this.cliente.telefone;\r\n    else{\r\n      alert(\"Por favor digite um telefone válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.email && !(this.cliente.email === \"\")) email = this.cliente.email;\r\n    else{\r\n      alert(\"Por favor digite um email válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.cpf && !(this.cliente.cpf === \"\")) cpf = this.cliente.cpf;\r\n    else{\r\n      alert(\"Por favor digite um CPF válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.cep && !(this.cliente.cep === \"\")) cep = this.cliente.cep;\r\n    else{\r\n      alert(\"Por favor digite um CEP válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.logradouro && !(this.cliente.logradouro === \"\")) logradouro = this.cliente.logradouro;\r\n    else{\r\n      alert(\"Por favor digite um logradouro válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.numero && !(this.cliente.numero === 0)) numero = this.cliente.numero;\r\n    else{\r\n      alert(\"Por favor digite um número válido\");\r\n      return undefined\r\n    }\r\n    if(this.cliente?.bairro && !(this.cliente.bairro === \"\")) bairro = this.cliente.bairro;\r\n    else{\r\n      alert(\"Por favor digite um bairro válido\");\r\n      return undefined\r\n    }\r\n    if(tipoCidade) cidade = tipoCidade;\r\n    if(this.cliente?.estado) estado = this.cliente.estado;\r\n    if(this.cliente?.complemento) complemento = this.cliente.complemento;\r\n\r\n    let cliente = {\r\n      id: id,\r\n      nome: nome,\r\n      telefone: telefone,\r\n      email: email,\r\n      cpf: cpf,\r\n      cep: cep,\r\n      logradouro: logradouro,\r\n      numero: numero,\r\n      bairro: bairro,\r\n      cidade: cidade,\r\n      estado: estado,\r\n      complemento: complemento,\r\n    }\r\n\r\n    return cliente\r\n    }\r\n  number(val:String){\r\n    return Number(val);\r\n  }\r\n}\r\n","<section class=\"page-section\" id=\"contact\" style=\"margin-top: 5px;\">\r\n    <div class=\"container\">\r\n        <div class=\"col-lg-8 col-xl-7\">\r\n            <form class=\"form\" *ngIf=\"cliente\" autocomplete=\"off\">\r\n                <div class=\"coluna1\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Nome</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"nome-cliente\" name=\"nome-cliente\"\r\n                            [(ngModel)]=\"cliente.nome\" placeholder=\"Insira seu nome\" autocomplete=\"off\" readonly\r\n                            onfocus=\"this.removeAttribute('readonly');\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Telefone</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"telefone-cliente\" name=\"telefone-cliente\"\r\n                            [(ngModel)]=\"cliente.telefone\" placeholder=\"Insira seu telefone\" autocomplete=\"off\">\r\n                    </div>\r\n\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Email</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"email-cliente\" name=\"email-cliente\"\r\n                            [(ngModel)]=\"cliente.email\" placeholder=\"Insira seu email\">\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"coluna2\">\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">CPF</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"cpf-cliente\" name=\"cpf-cliente\"\r\n                            [(ngModel)]=\"cliente.cpf\" placeholder=\"Insira seu CPF\">\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">CEP</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"cep-cliente\" name=\"cep-cliente\"\r\n                            [(ngModel)]=\"cliente.cep\" placeholder=\"Insira seu CEP\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Logradouro</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"logradouro-cliente\" name=\"logradouro-cliente\"\r\n                            [(ngModel)]=\"cliente.logradouro\" placeholder=\"Insira seu logradouro\">\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"coluna3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Número</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"numero-cliente\" name=\"numero-cliente\"\r\n                            [(ngModel)]=\"cliente.numero\" placeholder=\"Insira seu número\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Bairro</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"bairro-cliente\" name=\"bairro-cliente\"\r\n                            [(ngModel)]=\"cliente.bairro\" placeholder=\"Insira seu bairro\">\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Estado</label>\r\n                        <select name=\"teste\" id=\"required\" class=\"form-control form-control-chosen-required\"\r\n                            (change)=\"importarCidades()\" [(ngModel)]=\"estadoSelecionado\"\r\n                            data-placeholder=\"CPF - Nome do cliente\">\r\n                            <option></option>\r\n                            <option *ngFor=\"let estado of estados; index as i\" id=\"{{estado.id}}\"\r\n                                [selected]=\"(i+1)+'- '+estado.nome===estadoSelecionado\">{{(i+1)+\"- \"+estado.nome}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"coluna4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Cidade</label>\r\n                        <select name=\"teste\" id=\"required\" class=\"form-control form-control-chosen-required\"\r\n                            [(ngModel)]=\"municipioSelecionado\" data-placeholder=\"CPF - Nome do cliente\">\r\n                            <option></option>\r\n                            <option *ngFor=\"let municipio of municipios; index as i\" id=\"{{municipio.id}}\"\r\n                                [selected]=\"i+1==number(municipioSelecionado.split('-')[0])\">\r\n                                {{(i+1)+\"- \"+municipio.nome}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleInputEmail1\" style=\"padding: 10px;\">Complemento</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"complemento-cliente\" name=\"complemento-cliente\"\r\n                            [(ngModel)]=\"cliente.complemento\" placeholder=\"Insira seu complemento\">\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <button class=\"btn btn-primary btn-xl m-3\" id=\"submitButton\" (click)=\"registrar()\"\r\n                    type=\"button\">{{tituloDoBotao}}</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</section>"]},"metadata":{},"sourceType":"module"}