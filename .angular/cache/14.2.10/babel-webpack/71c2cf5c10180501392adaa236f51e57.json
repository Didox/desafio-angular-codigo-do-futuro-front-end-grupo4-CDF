{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { SimpleChanges } from '@angular/core';\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\nimport { CategoriaServico } from 'src/app/servicos/categoriaServico';\nimport { PedidoProdutoServico } from 'src/app/servicos/pedidoProdutoServico';\nimport { ProdutoServico } from 'src/app/servicos/produtoServico';\nimport { ChartType } from 'angular-google-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"angular-google-charts\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction HomeComponent_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const categoria_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵpropertyInterpolate(\"id\", categoria_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r2 + 1 + \"- \" + categoria_r1.nome, \"\");\n  }\n}\n\nexport class HomeComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http; //Dicionários\n    //Variáveis de Serviço CRUD\n\n    this.pedidoServico = {};\n    this.categoriaServico = {};\n    this.pedidoProdutoServico = {};\n    this.produtoServico = {}; //Arrays com dataBinding\n\n    this.categoriasMostradas = []; //Arrays Filtrados\n\n    this.pedidosProdutosSelecionados = [];\n    this.produtosSelecionados = [];\n    this.pedidosSelecionados = []; //Arrays com todos os valores\n\n    this.categorias = [];\n    this.pedidos = [];\n    this.pedidosProdutos = [];\n    this.produtos = []; //Variáveis com dataBinding\n\n    this.categoriaSelecionado = \"\";\n    this.dataInicial = \"01/01/2022\";\n    this.dataFinal = String(new Date(Date.now()));\n    this.valorTotal = \"\";\n    this.valorPositivo = \"\";\n    this.valorNegativo = \"\"; //Gráficos\n\n    this.titleColum = \"asd\";\n    this.columChart = ChartType.ColumnChart;\n    this.dataColum = [[\"2010\", 24, 20, 32, 18, 5], [\"2020\", 22, 23, 30, 16, 9], [\"2030\", 19, 29, 30, 12, 13]];\n    this.columnsNames = ['Genre', 'Fantasy & Sci Fi', 'Romance', 'Mystery/Crime', 'General', 'Western'];\n    this.widthColum = 600;\n    this.heightColum = 400;\n    this.optionsColum = {\n      width: 600,\n      height: 400,\n      legend: {\n        position: 'top',\n        maxLines: 3\n      },\n      bar: {\n        groupWidth: '75%'\n      },\n      isStacked: true\n    };\n    this.titleArea = \"asd\";\n    this.areaChart = ChartType.AreaChart;\n    this.dataArea = [];\n    this.optionsArea = {\n      width: 600,\n      height: 400,\n      title: 'Company Performance',\n      hAxis: {\n        titleTextStyle: {\n          color: '#333'\n        }\n      },\n      vAxis: {\n        title: \"Faturamento\",\n        minValue: 0\n      }\n    };\n    this.titleHist = \"title\";\n    this.histChart = ChartType.Histogram;\n    this.dataHist = [[2 / 3, -1, 0, 0], [2 / 3, -1, 0, null], [2 / 3, -1, 0, null], [-1 / 3, 0, 1, null], [-1 / 3, 0, -1, null], [-1 / 3, 0, null, null], [-1 / 3, 0, null, null]];\n    this.columnsNamesHist = ['Quarks', 'Leptons', 'Gauge Bosons', 'Scalar Bosons'];\n    this.optionsHist = {\n      width: 600,\n      height: 400,\n      title: 'Charges of subatomic particles',\n      legend: {\n        position: 'top',\n        maxLines: 2\n      },\n      colors: ['#5C3292', '#1A8763', '#871B47', '#999999'],\n      interpolateNulls: false\n    };\n  }\n\n  ngOnInit() {\n    this.pedidoServico = new PedidoServico(this.http);\n    this.categoriaServico = new CategoriaServico(this.http);\n    this.pedidoProdutoServico = new PedidoProdutoServico(this.http);\n    this.produtoServico = new ProdutoServico(this.http);\n    this.listaDeCategorias();\n  }\n\n  ngOnChanges(changes) {\n    this.filtraData();\n  }\n\n  listaDeCategorias() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let categorias = yield _this.categoriaServico.lista();\n      categorias?.forEach(categoria => {\n        _this.categorias.push(categoria);\n      });\n      _this.categoriasMostradas = _this.categorias;\n      yield _this.listaDePedidos();\n      yield _this.listaDeProdutos();\n      yield _this.listaDePedidosProdutos();\n\n      _this.gerarGraficoBarra(0);\n\n      _this.gerarGraficoArea(0);\n    })();\n  }\n\n  dataBr(data) {\n    return data.getDate().toString() + \"/\" + (data.getMonth() + 1).toString() + \"/\" + data.getFullYear().toString();\n  }\n\n  gerarGraficoBarra(categoria) {\n    let titleColum = \"Repartição de lucro por Produto em cada Categoria\";\n    let dataColum1 = [];\n    let dataColum2 = [];\n    let dataColum3 = [];\n    let dataHist = [];\n    let columnsNames = [\"teste\"];\n    let val1 = this.corrigirInicial(this.dataInicial);\n    let val4 = this.aumentar(this.dataFinal);\n    let val2 = new Date(val1.getTime() + (val4.getTime() - val1.getTime()) / 3);\n    let val3 = new Date(val1.getTime() + (val4.getTime() - val1.getTime()) / 3 * 2);\n    dataColum1.push(`${this.dataBr(val1)}\\n${this.dataBr(val2)}`);\n    dataColum2.push(`${this.dataBr(val2)}\\n${this.dataBr(val3)}`);\n    dataColum3.push(`${this.dataBr(val3)}\\n${this.dataBr(val4)}`);\n    let dictPedidoTemp = new Map();\n    this.pedidos.forEach(pedido => {\n      let datar = new Date(pedido.data.toString());\n      if (datar > val1 && datar <= val2) dictPedidoTemp.set(pedido.id, 1);\n      if (datar > val2 && datar <= val3) dictPedidoTemp.set(pedido.id, 2);\n      if (datar > val3 && datar <= val4) dictPedidoTemp.set(pedido.id, 3);\n    });\n\n    if (!(categoria.toString() === \"0\")) {\n      titleColum = \"Repartição de lucro por produto em \" + this.categoriasMostradas[Number(categoria)];\n      let quantidades = 0;\n      this.produtosSelecionados.forEach(produto => {\n        let id_produto = produto.id;\n        let lucro1 = 0;\n        let lucro2 = 0;\n        let lucro3 = 0;\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          if (dictPedidoTemp.get(pedidoProduto.pedido_id) && pedidoProduto.produto_id.toString() === id_produto.toString()) {\n            if (dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString() === \"1\") {\n              lucro1 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            } else if (dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString() === \"2\") {\n              lucro2 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            } else {\n              lucro3 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            }\n\n            quantidades += Number(pedidoProduto.quantidade);\n          }\n        });\n        dataHist.push([produto.nome, quantidades]);\n        dataColum1.push(lucro1);\n        dataColum2.push(lucro2);\n        dataColum3.push(lucro3);\n        columnsNames.push(produto.nome);\n      });\n    } else {\n      this.categorias.forEach(categoria => {\n        let dictProdutoTemp = new Map();\n        let categoria_id = categoria.id;\n        this.produtosSelecionados.forEach(produto => {\n          dictProdutoTemp.set(produto.id, produto.categoria_id.toString() === categoria_id.toString());\n        });\n        let lucro1 = 0;\n        let lucro2 = 0;\n        let lucro3 = 0;\n        let quantidades = 0;\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          if (dictPedidoTemp.get(pedidoProduto.pedido_id) && dictProdutoTemp.get(pedidoProduto.produto_id)) {\n            if (dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString() === \"1\") {\n              lucro1 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            } else if (dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString() === \"2\") {\n              lucro2 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            } else {\n              lucro3 += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n            }\n\n            quantidades += Number(pedidoProduto.quantidade);\n          }\n        });\n        dataColum1.push(lucro1);\n        dataColum2.push(lucro2);\n        dataColum3.push(lucro3);\n        columnsNames.push(categoria.nome);\n        dataHist.push([categoria.nome]);\n      });\n    }\n\n    let dataColum = [dataColum1, dataColum2, dataColum3];\n    this.dataColum = dataColum;\n    console.log(dataColum);\n    this.titleColum = titleColum;\n    this.columnsNames = columnsNames;\n    console.log(columnsNames);\n  }\n\n  getStringArea(dataIni, dataFim, atual) {\n    var meses = [\"Jan\", \"Fev\", \"Mar\", \"Abr\", \"Mai\", \"Jun\", \"Jul\", \"Ago\", \"Set\", \"Out\", \"Nov\", \"Dez\"];\n    let diferenca = parseInt(((dataFim.getTime() - dataIni.getTime()) / 1000 / 24 / 3600).toString());\n    if (diferenca < 21) return `${atual.getDate()}/${atual.getMonth() + 1}/${atual.getFullYear()}`;\n\n    if (diferenca < 700) {\n      let semana = 0;\n\n      if (atual.getDate() < 7) {\n        semana = 1;\n      } else if (atual.getDate() < 14) {\n        semana = 2;\n      } else if (atual.getDate() < 21) {\n        semana = 3;\n      } else if (atual.getDate() < 28) {\n        semana = 4;\n      } else {\n        semana = 5;\n      }\n\n      return `Sem ${semana} /${meses[atual.getMonth() + 1]}`;\n    }\n\n    if (diferenca < 3650) {\n      return `${meses[atual.getMonth() + 1]}/${atual.getFullYear()}`;\n    }\n\n    return `${atual.getFullYear()}`;\n  }\n\n  gerarGraficoArea(categoria) {\n    let dataInicial = this.corrigirInicial(this.dataInicial);\n    let dataFinal = this.aumentar(this.dataFinal);\n    let dataArea = [];\n    let title = \"\";\n    let datas = [dataInicial];\n    let diferenca = dataFinal.getTime() - dataInicial.getTime();\n    let layers = this.categorias.length;\n\n    if (!(categoria.toString() === \"0\")) {\n      layers = this.produtosSelecionados.length;\n    }\n\n    let dictPedidoTemp = new Map();\n\n    for (let i = 0; i < 20; i++) {\n      datas.push(new Date(datas[i].getTime() + diferenca / 20));\n      dataArea.push([this.getStringArea(dataInicial, dataFinal, new Date(datas[i].getTime() + diferenca / 20))]);\n\n      for (let j = 0; j < layers; j++) {\n        dataArea[i].push(0);\n      }\n    }\n\n    this.pedidos.forEach(pedido => {\n      let datar = new Date(pedido.data.toString());\n\n      for (let i = 0; i < 20; i++) {\n        if (datar > datas[i] && datar <= datas[i + 1]) dictPedidoTemp.set(pedido.id, i);\n      }\n    });\n    console.log(\"Pedidos \", dictPedidoTemp);\n\n    if (!(categoria.toString() === \"0\")) {\n      title = \"Repartição de lucro por produto em \" + this.categoriasMostradas[Number(categoria)];\n      let cont = 0;\n      this.produtosSelecionados.forEach(produto => {\n        cont++;\n        let id_produto = produto.id;\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id);\n\n          if (id && pedidoProduto.produto_id.toString() === id_produto.toString()) {\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n          }\n        });\n      });\n    } else {\n      let cont = 0;\n      this.categorias.forEach(categoria => {\n        cont++;\n        let dictProdutoTemp = new Map();\n        let categoria_id = categoria.id;\n        this.produtosSelecionados.forEach(produto => {\n          dictProdutoTemp.set(produto.id, produto.categoria_id.toString() === categoria_id.toString());\n        });\n        this.pedidosProdutos.forEach(pedidoProduto => {\n          let id = dictPedidoTemp.get(pedidoProduto.pedido_id);\n\n          if (id && dictProdutoTemp.get(pedidoProduto.produto_id)) {\n            dataArea[Number(id)][cont] += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n          }\n        });\n      });\n    }\n\n    for (let i = 1; i < dataArea.length; i++) {\n      for (let j = 1; j < dataArea[i].length; j++) {\n        dataArea[i][j] += dataArea[i - 1][j];\n      }\n    }\n\n    console.log(dataArea);\n    this.dataArea = dataArea;\n    this.titleArea = title;\n  }\n\n  listaDeProdutos() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let produtos = yield _this2.produtoServico.lista();\n      produtos?.forEach(produto => {\n        _this2.produtos.push(produto);\n      });\n      _this2.produtosSelecionados = _this2.produtos;\n    })();\n  }\n\n  listaDePedidosProdutos() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidosProdutos = yield _this3.pedidoProdutoServico.lista();\n      pedidosProdutos?.forEach(pedidoProduto => {\n        _this3.pedidosProdutos.push(pedidoProduto);\n      });\n      _this3.pedidosProdutosSelecionados = _this3.pedidosProdutos;\n\n      _this3.getValor_Total();\n    })();\n  }\n\n  listaDePedidos() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidos = yield _this4.pedidoServico.lista();\n      pedidos?.forEach(pedido => {\n        _this4.pedidos.push(pedido);\n      }); //this.pedidosMostrados = this.pedidos?.reverse();\n    })();\n  }\n\n  getValor_Total() {\n    let total = 0,\n        positivo = 0,\n        negativo = 0;\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto => {\n      let val1 = total;\n      total += Number(pedidoProduto.valor) * Number(pedidoProduto.quantidade);\n\n      if (val1 > total) {\n        negativo += val1 - total;\n      } else {\n        positivo += total - val1;\n      }\n    });\n    this.valorTotal = total.toString();\n    this.valorPositivo = positivo.toString();\n    this.valorNegativo = negativo.toString();\n  }\n\n  atualizar() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.pedidosSelecionados = _this5.pedidos;\n      _this5.pedidosProdutosSelecionados = _this5.pedidosProdutos;\n      _this5.produtosSelecionados = _this5.produtos;\n      let categoria = new Number(_this5.categoriaSelecionado.split(\"-\")[0]);\n\n      let dictPedidoSelecionado = _this5.filtraData();\n\n      let dictProdutoSelecionado = _this5.filtrarProduto(categoria);\n\n      let dictPedidoTemp = new Map();\n\n      let save = _this5.pedidosProdutosSelecionados.filter(pedidoProduto => {\n        let val = false;\n\n        if (dictPedidoSelecionado.get(pedidoProduto.pedido_id)) {\n          if (dictProdutoSelecionado.get(pedidoProduto.produto_id)) {\n            val = true;\n          }\n        }\n\n        if (!dictPedidoTemp.get(pedidoProduto.pedido_id)) dictPedidoTemp.set(pedidoProduto.pedido_id, val);\n        return val;\n      });\n\n      _this5.pedidosProdutosSelecionados = save;\n      _this5.pedidosSelecionados = _this5.pedidosSelecionados.filter(pedido => {\n        if (dictPedidoSelecionado.get(pedido.id)) return true;\n        return false;\n      });\n\n      _this5.getValor_Total();\n\n      _this5.gerarGraficoBarra(categoria);\n\n      _this5.gerarGraficoArea(categoria);\n    })();\n  }\n\n  filtrarProduto(categoria_id) {\n    let dictProdutoSelecionado = new Map();\n\n    if (categoria_id.toString() === \"0\") {\n      this.produtosSelecionados.forEach(produto => {\n        dictProdutoSelecionado.set(produto.id, true);\n      });\n      return dictProdutoSelecionado;\n    }\n\n    this.produtosSelecionados = this.produtosSelecionados.filter(produto => {\n      if (produto.categoria_id.toString() === categoria_id.toString()) {\n        dictProdutoSelecionado.set(produto.id, true);\n        return true;\n      }\n\n      dictProdutoSelecionado.set(produto.id, false);\n      return false;\n    });\n    return dictProdutoSelecionado;\n  }\n\n  number(a) {\n    return Number(a);\n  }\n\n  filtraData() {\n    let dictPedidoSelecionado = new Map();\n    this.pedidosSelecionados = this.pedidos.filter(result => {\n      let val = this.corrigirInicial(this.dataInicial) < new Date(result.data.toString()) && this.aumentar(this.dataFinal) > new Date(result.data.toString());\n      dictPedidoSelecionado.set(result.id, val);\n      return val;\n    });\n    return dictPedidoSelecionado;\n  }\n\n  corrigirInicial(data) {\n    let val = new Date(String(data)).getTime() + 10800000 - 1;\n    return new Date(val);\n  }\n\n  aumentar(data) {\n    let val = new Date(String(data)).getTime() + 86399999 + 10800000;\n    return new Date(val);\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 39,\n  vars: 24,\n  consts: [[\"id\", \"contact\", 1, \"page-section\", 2, \"margin-top\", \"100px\"], [1, \"container\"], [1, \"modelo\"], [\"type\", \"date\", \"onkeydown\", \"return false\", \"id\", \"dataI\", \"name\", \"dataI\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"for\", \"labelFiltro\", 2, \"display\", \"block\"], [\"type\", \"date\", \"onkeydown\", \"return false\", \"id\", \"dataF\", \"name\", \"dataF\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"name\", \"teste\", \"id\", \"required\", \"data-placeholder\", \"CPF - Nome do cliente\", 1, \"form-control\", \"form-control-chosen-required\", 3, \"ngModel\", \"change\", \"ngModelChange\"], [3, \"id\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"labelTotal\", 2, \"display\", \"block\"], [\"for\", \"labelTotalView\", 2, \"display\", \"block\"], [\"for\", \"labelSoma\", 2, \"display\", \"block\"], [\"for\", \"labelSomaView\", 2, \"display\", \"block\"], [\"for\", \"labelSubtracao\", 2, \"display\", \"block\"], [\"for\", \"labelSubtracaoView\", 2, \"display\", \"block\"], [3, \"title\", \"type\", \"data\", \"columns\", \"width\", \"height\", \"options\"], [3, \"title\", \"type\", \"data\", \"columns\", \"options\"], [3, \"id\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\")(3, \"div\", 2)(4, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.dataInicial = $event;\n      })(\"change\", function HomeComponent_Template_input_change_4_listener() {\n        return ctx.atualizar();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Data Inicio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.dataFinal = $event;\n      })(\"change\", function HomeComponent_Template_input_change_7_listener() {\n        return ctx.atualizar();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"label\", 4);\n      i0.ɵɵtext(9, \"Data Final\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Produtos\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 6);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_select_change_12_listener() {\n        return ctx.atualizar();\n      })(\"ngModelChange\", function HomeComponent_Template_select_ngModelChange_12_listener($event) {\n        return ctx.categoriaSelecionado = $event;\n      });\n      i0.ɵɵelementStart(13, \"option\");\n      i0.ɵɵtext(14, \"0- Todas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, HomeComponent_option_15_Template, 2, 2, \"option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 8);\n      i0.ɵɵtext(18, \"Total\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\", 9);\n      i0.ɵɵtext(20);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 2)(22, \"label\", 10);\n      i0.ɵɵtext(23, \"Soma\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"label\", 11);\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 12);\n      i0.ɵɵtext(28, \"Subtra\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"label\", 13);\n      i0.ɵɵtext(30);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(31, \"hr\");\n      i0.ɵɵelementStart(32, \"div\");\n      i0.ɵɵelement(33, \"google-chart\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\");\n      i0.ɵɵelement(35, \"google-chart\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\");\n      i0.ɵɵelement(37, \"google-chart\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(38, \"hr\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataInicial);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dataFinal);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.categoriaSelecionado);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.categoriasMostradas);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.valorTotal);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.valorPositivo);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate(ctx.valorNegativo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"title\", ctx.titleColum)(\"type\", ctx.columChart)(\"data\", ctx.dataColum)(\"columns\", ctx.columnsNames)(\"width\", ctx.widthColum)(\"height\", ctx.heightColum)(\"options\", ctx.optionsColum);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", ctx.titleArea)(\"type\", ctx.areaChart)(\"data\", ctx.dataArea)(\"columns\", ctx.columnsNames)(\"options\", ctx.optionsArea);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"title\", ctx.titleHist)(\"type\", ctx.histChart)(\"data\", ctx.dataHist)(\"columns\", ctx.columnsNamesHist)(\"options\", ctx.optionsHist);\n    }\n  },\n  dependencies: [i3.GoogleChartComponent, i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\".modelo[_ngcontent-%COMP%]{\\r\\n    display: inline-block;\\r\\n    margin-right: 10px;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]{\\r\\n    text-decoration: underline;\\r\\n    cursor: pointer;\\r\\n}\\r\\n.naDireita[_ngcontent-%COMP%]:hover{\\r\\n    color: rgb(23, 23, 209);\\r\\n    transition: 0.5s;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7QUFDQTtJQUNJLDBCQUEwQjtJQUMxQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSx1QkFBdUI7SUFDdkIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6ImhvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tb2RlbG97XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbn1cclxuLm5hRGlyZWl0YXtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbi5uYURpcmVpdGE6aG92ZXJ7XHJcbiAgICBjb2xvcjogcmdiKDIzLCAyMywgMjA5KTtcclxuICAgIHRyYW5zaXRpb246IDAuNXM7XHJcbn0iXX0= */\"]\n});","map":{"version":3,"mappings":";AACA,SAAuCA,aAAvC,QAA4D,eAA5D;AAIA,SAASC,aAAT,QAA8B,gCAA9B;AACA,SAASC,gBAAT,QAAiC,mCAAjC;AACA,SAASC,oBAAT,QAAqC,uCAArC;AACA,SAASC,cAAT,QAA+B,iCAA/B;AAGA,SAASC,SAAT,QAA0B,uBAA1B;;;;;;;;;;ICAwBC;IACIA;IAA6BA;;;;;;IADiCA;IAC9DA;IAAAA;;;;ADQ5B,OAAM,MAAOC,aAAP,CAAoB;EAExBC,YACUC,MADV,EAEUC,IAFV,EAE0B;IADhB;IACA,iBAAgB,CAI1B;IAEA;;IACO,qBAA+B,EAA/B;IACA,wBAAqC,EAArC;IACA,4BAA6C,EAA7C;IACA,sBAAiC,EAAjC,CAVmB,CAY1B;;IACO,2BAAiC,EAAjC,CAbmB,CAe1B;;IACO,mCAA4C,EAA5C;IACA,4BAAkC,EAAlC;IACA,2BAAgC,EAAhC,CAlBmB,CAoB1B;;IACQ,kBAAwB,EAAxB;IACA,eAAkB,EAAlB;IACA,uBAAiC,EAAjC;IACA,gBAAoB,EAApB,CAxBkB,CA0B1B;;IACO,4BAA4B,EAA5B;IACA,mBAAqB,YAArB;IACA,iBAAmBC,MAAM,CAAC,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAD,CAAzB;IACA,kBAAkB,EAAlB;IACA,qBAAqB,EAArB;IACA,qBAAqB,EAArB,CAhCmB,CAkC1B;;IACI,kBAAW,KAAX;IACA,kBAAaR,SAAS,CAACS,WAAvB;IACA,iBAAkB,CACnB,CAAE,MAAF,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,CADmB,EAEnB,CAAE,MAAF,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,CAFmB,EAGnB,CAAE,MAAF,EAAU,EAAV,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAHmB,CAAlB;IAID,oBAAe,CAAC,OAAD,EAAU,kBAAV,EAA8B,SAA9B,EAAyC,eAAzC,EAA0D,SAA1D,EACf,SADe,CAAf;IAEC,kBAAa,GAAb;IACA,mBAAc,GAAd;IACA,oBAAe;MACbC,KAAK,EAAE,GADM;MAEbC,MAAM,EAAE,GAFK;MAGbC,MAAM,EAAE;QAAEC,QAAQ,EAAE,KAAZ;QAAmBC,QAAQ,EAAE;MAA7B,CAHK;MAIbC,GAAG,EAAE;QAAEC,UAAU,EAAE;MAAd,CAJQ;MAKbC,SAAS,EAAE;IALE,CAAf;IAQA,iBAAU,KAAV;IACA,iBAAWjB,SAAS,CAACkB,SAArB;IACA,gBAAe,EAAf;IACA,mBAAY;MACVR,KAAK,EAAE,GADG;MAEVC,MAAM,EAAE,GAFE;MAGVQ,KAAK,EAAE,qBAHG;MAIVC,KAAK,EAAE;QAACC,cAAc,EAAE;UAACC,KAAK,EAAE;QAAR;MAAjB,CAJG;MAKVC,KAAK,EAAE;QAACJ,KAAK,EAAC,aAAP;QAAqBK,QAAQ,EAAE;MAA/B;IALG,CAAZ;IAQA,iBAAU,OAAV;IACA,iBAAUxB,SAAS,CAACyB,SAApB;IACA,gBAAU,CACV,CAAC,IAAE,CAAH,EAAM,CAAC,CAAP,EAAU,CAAV,EAAa,CAAb,CADU,EAEV,CAAC,IAAE,CAAH,EAAM,CAAC,CAAP,EAAU,CAAV,EAAa,IAAb,CAFU,EAGV,CAAC,IAAE,CAAH,EAAM,CAAC,CAAP,EAAU,CAAV,EAAa,IAAb,CAHU,EAIV,CAAC,CAAC,CAAD,GAAG,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,IAAb,CAJU,EAKV,CAAC,CAAC,CAAD,GAAG,CAAJ,EAAO,CAAP,EAAU,CAAC,CAAX,EAAc,IAAd,CALU,EAMV,CAAC,CAAC,CAAD,GAAG,CAAJ,EAAO,CAAP,EAAU,IAAV,EAAgB,IAAhB,CANU,EAOV,CAAC,CAAC,CAAD,GAAG,CAAJ,EAAO,CAAP,EAAU,IAAV,EAAgB,IAAhB,CAPU,CAAV;IASF,wBAAiB,CAAC,QAAD,EAAW,SAAX,EAAsB,cAAtB,EAAsC,eAAtC,CAAjB;IACE,mBAAY;MACVf,KAAK,EAAE,GADG;MAEVC,MAAM,EAAE,GAFE;MAGVQ,KAAK,EAAE,gCAHG;MAIVP,MAAM,EAAE;QAAEC,QAAQ,EAAE,KAAZ;QAAmBC,QAAQ,EAAE;MAA7B,CAJE;MAKVY,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CALE;MAMVC,gBAAgB,EAAE;IANR,CAAZ;EA1EH;;EAsFDC,QAAQ;IACN,KAAKC,aAAL,GAAqB,IAAIjC,aAAJ,CAAkB,KAAKS,IAAvB,CAArB;IACA,KAAKyB,gBAAL,GAAwB,IAAIjC,gBAAJ,CAAqB,KAAKQ,IAA1B,CAAxB;IACA,KAAK0B,oBAAL,GAA4B,IAAIjC,oBAAJ,CAAyB,KAAKO,IAA9B,CAA5B;IACA,KAAK2B,cAAL,GAAsB,IAAIjC,cAAJ,CAAmB,KAAKM,IAAxB,CAAtB;IACA,KAAK4B,iBAAL;EACD;;EAEDC,WAAW,CAACC,OAAD,EAAuB;IAChC,KAAKC,UAAL;EACD;;EAGaH,iBAAiB;IAAA;;IAAA;MAC7B,IAAII,UAAU,SAAS,KAAI,CAACP,gBAAL,CAAsBQ,KAAtB,EAAvB;MACAD,UAAU,EAAEE,OAAZ,CAAoBC,SAAS,IAAE;QAC7B,KAAI,CAACH,UAAL,CAAgBI,IAAhB,CAAqBD,SAArB;MACD,CAFD;MAGA,KAAI,CAACE,mBAAL,GAAyB,KAAI,CAACL,UAA9B;MACA,MAAM,KAAI,CAACM,cAAL,EAAN;MACA,MAAM,KAAI,CAACC,eAAL,EAAN;MACA,MAAM,KAAI,CAACC,sBAAL,EAAN;;MACA,KAAI,CAACC,iBAAL,CAAuB,CAAvB;;MACA,KAAI,CAACC,gBAAL,CAAsB,CAAtB;IAV6B;EAW9B;;EACOC,MAAM,CAACC,IAAD,EAAU;IACtB,OAAOA,IAAI,CAACC,OAAL,GAAeC,QAAf,KAA0B,GAA1B,GAA8B,CAACF,IAAI,CAACG,QAAL,KAAgB,CAAjB,EAAoBD,QAApB,EAA9B,GAA6D,GAA7D,GAAiEF,IAAI,CAACI,WAAL,GAAmBF,QAAnB,EAAxE;EACD;;EACOL,iBAAiB,CAACN,SAAD,EAAiB;IACxC,IAAIc,UAAU,GAAC,mDAAf;IACA,IAAIC,UAAU,GAAC,EAAf;IACA,IAAIC,UAAU,GAAC,EAAf;IACA,IAAIC,UAAU,GAAC,EAAf;IACA,IAAIC,QAAQ,GAAC,EAAb;IACA,IAAIC,YAAY,GAAO,CAAC,OAAD,CAAvB;IACA,IAAIC,IAAI,GAAC,KAAKC,eAAL,CAAqB,KAAKC,WAA1B,CAAT;IACA,IAAIC,IAAI,GAAC,KAAKC,QAAL,CAAc,KAAKC,SAAnB,CAAT;IACA,IAAIC,IAAI,GAAC,IAAI3D,IAAJ,CAASqD,IAAI,CAACO,OAAL,KAAe,CAACJ,IAAI,CAACI,OAAL,KAAeP,IAAI,CAACO,OAAL,EAAhB,IAAgC,CAAxD,CAAT;IACA,IAAIC,IAAI,GAAC,IAAI7D,IAAJ,CAASqD,IAAI,CAACO,OAAL,KAAe,CAACJ,IAAI,CAACI,OAAL,KAAeP,IAAI,CAACO,OAAL,EAAhB,IAAgC,CAAhC,GAAkC,CAA1D,CAAT;IACAZ,UAAU,CAACd,IAAX,CAAgB,GAAG,KAAKO,MAAL,CAAYY,IAAZ,CAAiB,KAAK,KAAKZ,MAAL,CAAYkB,IAAZ,CAAiB,EAA1D;IACAV,UAAU,CAACf,IAAX,CAAgB,GAAG,KAAKO,MAAL,CAAYkB,IAAZ,CAAiB,KAAK,KAAKlB,MAAL,CAAYoB,IAAZ,CAAiB,EAA1D;IACAX,UAAU,CAAChB,IAAX,CAAgB,GAAG,KAAKO,MAAL,CAAYoB,IAAZ,CAAiB,KAAK,KAAKpB,MAAL,CAAYe,IAAZ,CAAiB,EAA1D;IACA,IAAIM,cAAc,GAAoB,IAAIC,GAAJ,EAAtC;IACA,KAAKC,OAAL,CAAahC,OAAb,CAAqBiC,MAAM,IAAE;MAC3B,IAAIC,KAAK,GAAE,IAAIlE,IAAJ,CAASiE,MAAM,CAACvB,IAAP,CAAYE,QAAZ,EAAT,CAAX;MACA,IAAGsB,KAAK,GAACb,IAAN,IAAYa,KAAK,IAAEP,IAAtB,EAA4BG,cAAc,CAACK,GAAf,CAAmBF,MAAM,CAACG,EAA1B,EAA6B,CAA7B;MAC5B,IAAGF,KAAK,GAACP,IAAN,IAAYO,KAAK,IAAEL,IAAtB,EAA4BC,cAAc,CAACK,GAAf,CAAmBF,MAAM,CAACG,EAA1B,EAA6B,CAA7B;MAC5B,IAAGF,KAAK,GAACL,IAAN,IAAYK,KAAK,IAAEV,IAAtB,EAA4BM,cAAc,CAACK,GAAf,CAAmBF,MAAM,CAACG,EAA1B,EAA6B,CAA7B;IAC7B,CALD;;IAMA,IAAG,EAAEnC,SAAS,CAACW,QAAV,OAAuB,GAAzB,CAAH,EAAkC;MAChCG,UAAU,GAAC,wCAAsC,KAAKZ,mBAAL,CAAyBkC,MAAM,CAACpC,SAAD,CAA/B,CAAjD;MACA,IAAIqC,WAAW,GAAC,CAAhB;MACA,KAAKC,oBAAL,CAA0BvC,OAA1B,CAAkCwC,OAAO,IAAE;QACzC,IAAIC,UAAU,GAACD,OAAO,CAACJ,EAAvB;QACA,IAAIM,MAAM,GAAC,CAAX;QACA,IAAIC,MAAM,GAAC,CAAX;QACA,IAAIC,MAAM,GAAC,CAAX;QACA,KAAKC,eAAL,CAAqB7C,OAArB,CAA6B8C,aAAa,IAAE;UAC1C,IAAGhB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,KAA6CF,aAAa,CAACG,UAAd,CAAyBrC,QAAzB,OAAsC6B,UAAU,CAAC7B,QAAX,EAAtF,EAA4G;YAC1G,IAAGkB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,GAA6CpC,QAA7C,OAA0D,GAA7D,EAAiE;cAC/D8B,MAAM,IAAEL,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD,CAFD,MAGA,IAAGrB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,GAA6CpC,QAA7C,OAA0D,GAA7D,EAAiE;cAC/D+B,MAAM,IAAEN,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD,CAFD,MAEK;cACHP,MAAM,IAAEP,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD;;YACDb,WAAW,IAAED,MAAM,CAACS,aAAa,CAACK,UAAf,CAAnB;UACD;QACJ,CAZC;QAaFhC,QAAQ,CAACjB,IAAT,CAAc,CAACsC,OAAO,CAACY,IAAT,EAAcd,WAAd,CAAd;QACAtB,UAAU,CAACd,IAAX,CAAgBwC,MAAhB;QACAzB,UAAU,CAACf,IAAX,CAAgByC,MAAhB;QACAzB,UAAU,CAAChB,IAAX,CAAgB0C,MAAhB;QACAxB,YAAY,CAAClB,IAAb,CAAkBsC,OAAO,CAACY,IAA1B;MACD,CAvBC;IAwBD,CA3BD,MA2BK;MACH,KAAKtD,UAAL,CAAgBE,OAAhB,CAAwBC,SAAS,IAAE;QACjC,IAAIoD,eAAe,GAAqB,IAAItB,GAAJ,EAAxC;QACA,IAAIuB,YAAY,GAACrD,SAAS,CAACmC,EAA3B;QACA,KAAKG,oBAAL,CAA0BvC,OAA1B,CAAkCwC,OAAO,IAAE;UACvCa,eAAe,CAAClB,GAAhB,CAAoBK,OAAO,CAACJ,EAA5B,EAA+BI,OAAO,CAACc,YAAR,CAAqB1C,QAArB,OAAkC0C,YAAY,CAAC1C,QAAb,EAAjE;QACH,CAFD;QAGA,IAAI8B,MAAM,GAAC,CAAX;QACA,IAAIC,MAAM,GAAC,CAAX;QACA,IAAIC,MAAM,GAAC,CAAX;QACA,IAAIN,WAAW,GAAC,CAAhB;QACA,KAAKO,eAAL,CAAqB7C,OAArB,CAA6B8C,aAAa,IAAE;UAC1C,IAAGhB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,KAA6CK,eAAe,CAACN,GAAhB,CAAoBD,aAAa,CAACG,UAAlC,CAAhD,EAA8F;YAC5F,IAAGnB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,GAA6CpC,QAA7C,OAA0D,GAA7D,EAAiE;cAC/D8B,MAAM,IAAEL,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD,CAFD,MAGA,IAAGrB,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,GAA6CpC,QAA7C,OAA0D,GAA7D,EAAiE;cAC/D+B,MAAM,IAAEN,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD,CAFD,MAEK;cACHP,MAAM,IAAEP,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA1C;YACD;;YACDb,WAAW,IAAED,MAAM,CAACS,aAAa,CAACK,UAAf,CAAnB;UACD;QACF,CAZD;QAaAnC,UAAU,CAACd,IAAX,CAAgBwC,MAAhB;QACAzB,UAAU,CAACf,IAAX,CAAgByC,MAAhB;QACAzB,UAAU,CAAChB,IAAX,CAAgB0C,MAAhB;QACAxB,YAAY,CAAClB,IAAb,CAAkBD,SAAS,CAACmD,IAA5B;QACAjC,QAAQ,CAACjB,IAAT,CAAc,CAACD,SAAS,CAACmD,IAAX,CAAd;MACD,CA5BD;IA8BD;;IACD,IAAIG,SAAS,GAAC,CAACvC,UAAD,EAAYC,UAAZ,EAAuBC,UAAvB,CAAd;IACA,KAAKqC,SAAL,GAAeA,SAAf;IACAC,OAAO,CAACC,GAAR,CAAYF,SAAZ;IACA,KAAKxC,UAAL,GAAgBA,UAAhB;IACA,KAAKK,YAAL,GAAkBA,YAAlB;IACAoC,OAAO,CAACC,GAAR,CAAYrC,YAAZ;EACD;;EACOsC,aAAa,CAACC,OAAD,EAAcC,OAAd,EAA2BC,KAA3B,EAAqC;IACxD,IAAIC,KAAK,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE,CAAZ;IACA,IAAIC,SAAS,GAACC,QAAQ,CAAC,CAAC,CAACJ,OAAO,CAAChC,OAAR,KAAkB+B,OAAO,CAAC/B,OAAR,EAAnB,IAAsC,IAAtC,GAA2C,EAA3C,GAA8C,IAA/C,EAAqDhB,QAArD,EAAD,CAAtB;IACA,IAAGmD,SAAS,GAAC,EAAb,EACE,OAAO,GAAGF,KAAK,CAAClD,OAAN,EAAe,IAAIkD,KAAK,CAAChD,QAAN,KAAiB,CAAC,IAAIgD,KAAK,CAAC/C,WAAN,EAAmB,EAAtE;;IACF,IAAGiD,SAAS,GAAC,GAAb,EAAiB;MACf,IAAIE,MAAM,GAAC,CAAX;;MACA,IAAGJ,KAAK,CAAClD,OAAN,KAAgB,CAAnB,EAAqB;QACnBsD,MAAM,GAAC,CAAP;MACD,CAFD,MAEM,IAAGJ,KAAK,CAAClD,OAAN,KAAgB,EAAnB,EAAsB;QAC1BsD,MAAM,GAAC,CAAP;MACD,CAFK,MAEA,IAAGJ,KAAK,CAAClD,OAAN,KAAgB,EAAnB,EAAsB;QAC1BsD,MAAM,GAAC,CAAP;MACD,CAFK,MAEA,IAAGJ,KAAK,CAAClD,OAAN,KAAgB,EAAnB,EAAsB;QAC1BsD,MAAM,GAAC,CAAP;MACD,CAFK,MAED;QACHA,MAAM,GAAC,CAAP;MACD;;MACD,OAAO,OAAOA,MAAM,KAAKH,KAAK,CAACD,KAAK,CAAChD,QAAN,KAAiB,CAAlB,CAAoB,EAAlD;IACD;;IAAA,IAAGkD,SAAS,GAAC,IAAb,EAAkB;MACjB,OAAO,GAAGD,KAAK,CAACD,KAAK,CAAChD,QAAN,KAAiB,CAAlB,CAAoB,IAAIgD,KAAK,CAAC/C,WAAN,EAAmB,EAA1D;IACD;;IACD,OAAO,GAAG+C,KAAK,CAAC/C,WAAN,EAAmB,EAA7B;EACD;;EAEON,gBAAgB,CAACP,SAAD,EAAiB;IACvC,IAAIsB,WAAW,GAAC,KAAKD,eAAL,CAAqB,KAAKC,WAA1B,CAAhB;IACA,IAAIG,SAAS,GAAC,KAAKD,QAAL,CAAc,KAAKC,SAAnB,CAAd;IACA,IAAIwC,QAAQ,GAAO,EAAnB;IACA,IAAItF,KAAK,GAAC,EAAV;IACA,IAAIuF,KAAK,GAAO,CAAC5C,WAAD,CAAhB;IACA,IAAIwC,SAAS,GAACrC,SAAS,CAACE,OAAV,KAAoBL,WAAW,CAACK,OAAZ,EAAlC;IACA,IAAIwC,MAAM,GAAC,KAAKtE,UAAL,CAAgBuE,MAA3B;;IACA,IAAG,EAAEpE,SAAS,CAACW,QAAV,OAAuB,GAAzB,CAAH,EAAiC;MAC/BwD,MAAM,GAAC,KAAK7B,oBAAL,CAA0B8B,MAAjC;IACD;;IAED,IAAIvC,cAAc,GAAoB,IAAIC,GAAJ,EAAtC;;IACA,KAAK,IAAIuC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;MAC3BH,KAAK,CAACjE,IAAN,CAAW,IAAIlC,IAAJ,CAASmG,KAAK,CAACG,CAAD,CAAL,CAAS1C,OAAT,KAAmBmC,SAAS,GAAC,EAAtC,CAAX;MACAG,QAAQ,CAAChE,IAAT,CAAc,CAAC,KAAKwD,aAAL,CAAmBnC,WAAnB,EAA+BG,SAA/B,EAAyC,IAAI1D,IAAJ,CAASmG,KAAK,CAACG,CAAD,CAAL,CAAS1C,OAAT,KAAmBmC,SAAS,GAAC,EAAtC,CAAzC,CAAD,CAAd;;MACA,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;QAC/BL,QAAQ,CAACI,CAAD,CAAR,CAAYpE,IAAZ,CAAiB,CAAjB;MACD;IACF;;IACD,KAAK8B,OAAL,CAAahC,OAAb,CAAqBiC,MAAM,IAAE;MAC3B,IAAIC,KAAK,GAAE,IAAIlE,IAAJ,CAASiE,MAAM,CAACvB,IAAP,CAAYE,QAAZ,EAAT,CAAX;;MACA,KAAK,IAAI0D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QAC3B,IAAGpC,KAAK,GAACiC,KAAK,CAACG,CAAD,CAAX,IAAgBpC,KAAK,IAAEiC,KAAK,CAACG,CAAC,GAAC,CAAH,CAA/B,EAAqCxC,cAAc,CAACK,GAAf,CAAmBF,MAAM,CAACG,EAA1B,EAA6BkC,CAA7B;MACtC;IACF,CALD;IAMAd,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB3B,cAAxB;;IACA,IAAG,EAAE7B,SAAS,CAACW,QAAV,OAAuB,GAAzB,CAAH,EAAkC;MAChChC,KAAK,GAAC,wCAAsC,KAAKuB,mBAAL,CAAyBkC,MAAM,CAACpC,SAAD,CAA/B,CAA5C;MACA,IAAIuE,IAAI,GAAC,CAAT;MACA,KAAKjC,oBAAL,CAA0BvC,OAA1B,CAAkCwC,OAAO,IAAE;QACzCgC,IAAI;QACJ,IAAI/B,UAAU,GAACD,OAAO,CAACJ,EAAvB;QACA,KAAKS,eAAL,CAAqB7C,OAArB,CAA6B8C,aAAa,IAAE;UAC1C,IAAIV,EAAE,GAACN,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,CAAP;;UACA,IAAGZ,EAAE,IAAEU,aAAa,CAACG,UAAd,CAAyBrC,QAAzB,OAAsC6B,UAAU,CAAC7B,QAAX,EAA7C,EAAmE;YACjEsD,QAAQ,CAAC7B,MAAM,CAACD,EAAD,CAAP,CAAR,CAAqBoC,IAArB,KAA4BnC,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA9D;UACD;QACJ,CALC;MAMH,CATC;IAUD,CAbD,MAaK;MACH,IAAIqB,IAAI,GAAC,CAAT;MACA,KAAK1E,UAAL,CAAgBE,OAAhB,CAAwBC,SAAS,IAAE;QACjCuE,IAAI;QACJ,IAAInB,eAAe,GAAqB,IAAItB,GAAJ,EAAxC;QACA,IAAIuB,YAAY,GAACrD,SAAS,CAACmC,EAA3B;QACA,KAAKG,oBAAL,CAA0BvC,OAA1B,CAAkCwC,OAAO,IAAE;UACvCa,eAAe,CAAClB,GAAhB,CAAoBK,OAAO,CAACJ,EAA5B,EAA+BI,OAAO,CAACc,YAAR,CAAqB1C,QAArB,OAAkC0C,YAAY,CAAC1C,QAAb,EAAjE;QACH,CAFD;QAGA,KAAKiC,eAAL,CAAqB7C,OAArB,CAA6B8C,aAAa,IAAE;UAC1C,IAAIV,EAAE,GAACN,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,CAAP;;UACA,IAAGZ,EAAE,IAAEiB,eAAe,CAACN,GAAhB,CAAoBD,aAAa,CAACG,UAAlC,CAAP,EAAqD;YACnDiB,QAAQ,CAAC7B,MAAM,CAACD,EAAD,CAAP,CAAR,CAAqBoC,IAArB,KAA4BnC,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAA9D;UACD;QACF,CALD;MAMD,CAbD;IAeD;;IACD,KAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAACG,MAA7B,EAAqCC,CAAC,EAAtC,EAA0C;MACxC,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAAQ,CAACI,CAAD,CAAR,CAAYD,MAAhC,EAAwCE,CAAC,EAAzC,EAA6C;QAC3CL,QAAQ,CAACI,CAAD,CAAR,CAAYC,CAAZ,KAAgBL,QAAQ,CAACI,CAAC,GAAC,CAAH,CAAR,CAAcC,CAAd,CAAhB;MACD;IACF;;IACDf,OAAO,CAACC,GAAR,CAAYS,QAAZ;IACA,KAAKA,QAAL,GAAcA,QAAd;IACA,KAAKO,SAAL,GAAe7F,KAAf;EACD;;EAEayB,eAAe;IAAA;;IAAA;MAC3B,IAAIqE,QAAQ,SAAS,MAAI,CAACjF,cAAL,CAAoBM,KAApB,EAArB;MACA2E,QAAQ,EAAE1E,OAAV,CAAkBwC,OAAO,IAAE;QACzB,MAAI,CAACkC,QAAL,CAAcxE,IAAd,CAAmBsC,OAAnB;MACD,CAFD;MAGA,MAAI,CAACD,oBAAL,GAA0B,MAAI,CAACmC,QAA/B;IAL2B;EAM5B;;EAEapE,sBAAsB;IAAA;;IAAA;MAClC,IAAIuC,eAAe,SAAS,MAAI,CAACrD,oBAAL,CAA0BO,KAA1B,EAA5B;MACA8C,eAAe,EAAE7C,OAAjB,CAAyB8C,aAAa,IAAE;QACtC,MAAI,CAACD,eAAL,CAAqB3C,IAArB,CAA0B4C,aAA1B;MACD,CAFD;MAGA,MAAI,CAAC6B,2BAAL,GAAiC,MAAI,CAAC9B,eAAtC;;MACA,MAAI,CAAC+B,cAAL;IANkC;EAOnC;;EAEaxE,cAAc;IAAA;;IAAA;MAC1B,IAAI4B,OAAO,SAAS,MAAI,CAAC1C,aAAL,CAAmBS,KAAnB,EAApB;MACAiC,OAAO,EAAEhC,OAAT,CAAiBiC,MAAM,IAAE;QACvB,MAAI,CAACD,OAAL,CAAa9B,IAAb,CAAkB+B,MAAlB;MACD,CAFD,EAF0B,CAK1B;IAL0B;EAM3B;;EAEO2C,cAAc;IACpB,IAAIC,KAAK,GAAC,CAAV;IAAA,IAAYC,QAAQ,GAAC,CAArB;IAAA,IAAuBC,QAAQ,GAAC,CAAhC;IACA,KAAKJ,2BAAL,CAAiC3E,OAAjC,CAAyC8C,aAAa,IAAE;MACtD,IAAIzB,IAAI,GAACwD,KAAT;MACAA,KAAK,IAAExC,MAAM,CAACS,aAAa,CAACI,KAAf,CAAN,GAA4Bb,MAAM,CAACS,aAAa,CAACK,UAAf,CAAzC;;MACA,IAAG9B,IAAI,GAACwD,KAAR,EAAc;QACZE,QAAQ,IAAE1D,IAAI,GAACwD,KAAf;MACD,CAFD,MAEK;QACHC,QAAQ,IAAED,KAAK,GAACxD,IAAhB;MACD;IACF,CARD;IASA,KAAK2D,UAAL,GAAgBH,KAAK,CAACjE,QAAN,EAAhB;IACA,KAAKqE,aAAL,GAAmBH,QAAQ,CAAClE,QAAT,EAAnB;IACA,KAAKsE,aAAL,GAAmBH,QAAQ,CAACnE,QAAT,EAAnB;EACD;;EAEKuE,SAAS;IAAA;;IAAA;MACb,MAAI,CAACC,mBAAL,GAAyB,MAAI,CAACpD,OAA9B;MACA,MAAI,CAAC2C,2BAAL,GAAiC,MAAI,CAAC9B,eAAtC;MACA,MAAI,CAACN,oBAAL,GAA0B,MAAI,CAACmC,QAA/B;MACA,IAAIzE,SAAS,GAAC,IAAIoC,MAAJ,CAAW,MAAI,CAACgD,oBAAL,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAX,CAAd;;MACA,IAAIC,qBAAqB,GAAG,MAAI,CAAC1F,UAAL,EAA5B;;MACA,IAAI2F,sBAAsB,GAAG,MAAI,CAACC,cAAL,CAAoBxF,SAApB,CAA7B;;MACA,IAAI6B,cAAc,GAAuB,IAAIC,GAAJ,EAAzC;;MACA,IAAI2D,IAAI,GAAC,MAAI,CAACf,2BAAL,CAAiCgB,MAAjC,CAAwC7C,aAAa,IAAE;QAC9D,IAAI8C,GAAG,GAAC,KAAR;;QACA,IAAGL,qBAAqB,CAACxC,GAAtB,CAA0BD,aAAa,CAACE,SAAxC,CAAH,EAAsD;UACpD,IAAGwC,sBAAsB,CAACzC,GAAvB,CAA2BD,aAAa,CAACG,UAAzC,CAAH,EAAwD;YACtD2C,GAAG,GAAC,IAAJ;UACD;QACF;;QACD,IAAG,CAAC9D,cAAc,CAACiB,GAAf,CAAmBD,aAAa,CAACE,SAAjC,CAAJ,EAAgDlB,cAAc,CAACK,GAAf,CAAmBW,aAAa,CAACE,SAAjC,EAA2C4C,GAA3C;QAChD,OAAOA,GAAP;MACD,CATQ,CAAT;;MAUA,MAAI,CAACjB,2BAAL,GAAiCe,IAAjC;MACA,MAAI,CAACN,mBAAL,GAAyB,MAAI,CAACA,mBAAL,CAAyBO,MAAzB,CAAgC1D,MAAM,IAAE;QAC/D,IAAGsD,qBAAqB,CAACxC,GAAtB,CAA0Bd,MAAM,CAACG,EAAjC,CAAH,EAAyC,OAAO,IAAP;QACzC,OAAO,KAAP;MACD,CAHwB,CAAzB;;MAIA,MAAI,CAACwC,cAAL;;MACA,MAAI,CAACrE,iBAAL,CAAuBN,SAAvB;;MACA,MAAI,CAACO,gBAAL,CAAsBP,SAAtB;IAzBa;EA0Bd;;EAEDwF,cAAc,CAACnC,YAAD,EAAoB;IAChC,IAAIkC,sBAAsB,GAAqB,IAAIzD,GAAJ,EAA/C;;IACA,IAAGuB,YAAY,CAAC1C,QAAb,OAA0B,GAA7B,EAAiC;MAC/B,KAAK2B,oBAAL,CAA0BvC,OAA1B,CAAkCwC,OAAO,IAAE;QACzCgD,sBAAsB,CAACrD,GAAvB,CAA2BK,OAAO,CAACJ,EAAnC,EAAsC,IAAtC;MACD,CAFD;MAGA,OAAOoD,sBAAP;IACD;;IACD,KAAKjD,oBAAL,GAA0B,KAAKA,oBAAL,CAA0BoD,MAA1B,CAAiCnD,OAAO,IAAE;MAClE,IAAGA,OAAO,CAACc,YAAR,CAAqB1C,QAArB,OAAkC0C,YAAY,CAAC1C,QAAb,EAArC,EAA6D;QAC3D4E,sBAAsB,CAACrD,GAAvB,CAA2BK,OAAO,CAACJ,EAAnC,EAAsC,IAAtC;QACA,OAAO,IAAP;MACD;;MACDoD,sBAAsB,CAACrD,GAAvB,CAA2BK,OAAO,CAACJ,EAAnC,EAAsC,KAAtC;MACA,OAAO,KAAP;IACD,CAPyB,CAA1B;IAQA,OAAOoD,sBAAP;EACD;;EAEDK,MAAM,CAAEC,CAAF,EAAY;IAChB,OAAOzD,MAAM,CAACyD,CAAD,CAAb;EACD;;EAGDjG,UAAU;IACR,IAAI0F,qBAAqB,GAAqB,IAAIxD,GAAJ,EAA9C;IACA,KAAKqD,mBAAL,GAA2B,KAAKpD,OAAL,CAAa2D,MAAb,CAAoBI,MAAM,IAAG;MACtD,IAAIH,GAAG,GAAC,KAAKtE,eAAL,CAAqB,KAAKC,WAA1B,IAAyC,IAAIvD,IAAJ,CAAS+H,MAAM,CAACrF,IAAP,CAAYE,QAAZ,EAAT,CAAzC,IAA6E,KAAKa,QAAL,CAAc,KAAKC,SAAnB,IAAgC,IAAI1D,IAAJ,CAAS+H,MAAM,CAACrF,IAAP,CAAYE,QAAZ,EAAT,CAArH;MACA2E,qBAAqB,CAACpD,GAAtB,CAA0B4D,MAAM,CAAC3D,EAAjC,EAAoCwD,GAApC;MACA,OAAOA,GAAP;IACD,CAJ0B,CAA3B;IAKA,OAAOL,qBAAP;EACD;;EACDjE,eAAe,CAACZ,IAAD,EAAY;IACzB,IAAIkF,GAAG,GAAI,IAAI5H,IAAJ,CAASD,MAAM,CAAC2C,IAAD,CAAf,CAAD,CAAyBkB,OAAzB,KAAmC,QAAnC,GAA4C,CAAtD;IACA,OAAO,IAAI5D,IAAJ,CAAS4H,GAAT,CAAP;EACD;;EACDnE,QAAQ,CAACf,IAAD,EAAY;IAClB,IAAIkF,GAAG,GAAI,IAAI5H,IAAJ,CAASD,MAAM,CAAC2C,IAAD,CAAf,CAAD,CAAyBkB,OAAzB,KAAmC,QAAnC,GAA4C,QAAtD;IACA,OAAO,IAAI5D,IAAJ,CAAS4H,GAAT,CAAP;EACD;;AAzZuB;;;mBAAbjI,eAAaD;AAAA;;;QAAbC;EAAaqI;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCpB1B3I,mCAAsE,CAAtE,EAAsE,KAAtE,EAAsE,CAAtE,EAAsE,CAAtE,EAAsE,KAAtE,EAAsE,CAAtE,EAAsE,KAAtE,EAAsE,CAAtE,EAAsE,CAAtE,EAAsE,OAAtE,EAAsE,CAAtE;MAIoFA;QAAA;MAAA,GAAyB,QAAzB,EAAyB;QAAA,OAAa4I,eAAb;MAAwB,CAAjD;MAApE5I;MACAA;MAAiDA;MAAWA;MAC5DA;MAAoEA;QAAA;MAAA,GAAuB,QAAvB,EAAuB;QAAA,OAAa4I,eAAb;MAAwB,CAA/C;MAApE5I;MACAA;MAAiDA;MAAUA;MAC3DA;MAAiDA;MAAQA;MACzDA;MAAqFA;QAAA,OAAU4I,eAAV;MAAqB,CAArB,EAAsB,eAAtB,EAAsB;QAAA;MAAA,CAAtB;MAC7E5I;MAAQA;MAAQA;MAChBA;MAEJA;MAERA,gCAAoB,EAApB,EAAoB,OAApB,EAAoB,CAApB;MACoDA;MAAKA;MACrDA;MAAoDA;MAAcA;MAEtEA,gCAAoB,EAApB,EAAoB,OAApB,EAAoB,EAApB;MACmDA;MAAIA;MACnDA;MAAmDA;MAAiBA;MAExEA,gCAAoB,EAApB,EAAoB,OAApB,EAAoB,EAApB;MACwDA;MAASA;MAC7DA;MAAwDA;MAAiBA;MAGjFA;MACAA;MACIA;MAUJA;MACAA;MACIA;MAQJA;MACAA;MACIA;MAQJA;MACAA;MA2BJA;;;;MApFgFA;MAAAA;MAEAA;MAAAA;MAGwCA;MAAAA;MAEtEA;MAAAA;MAMcA;MAAAA;MAIDA;MAAAA;MAIKA;MAAAA;MAM5DA;MAAAA,uCAAoB,MAApB,EAAoB4I,cAApB,EAAoB,MAApB,EAAoBA,aAApB,EAAoB,SAApB,EAAoBA,gBAApB,EAAoB,OAApB,EAAoBA,cAApB,EAAoB,QAApB,EAAoBA,eAApB,EAAoB,SAApB,EAAoBA,gBAApB;MAYA5I;MAAAA,sCAAmB,MAAnB,EAAmB4I,aAAnB,EAAmB,MAAnB,EAAmBA,YAAnB,EAAmB,SAAnB,EAAmBA,gBAAnB,EAAmB,SAAnB,EAAmBA,eAAnB;MAUA5I;MAAAA,sCAAmB,MAAnB,EAAmB4I,aAAnB,EAAmB,MAAnB,EAAmBA,YAAnB,EAAmB,SAAnB,EAAmBA,oBAAnB,EAAmB,SAAnB,EAAmBA,eAAnB","names":["SimpleChanges","PedidoServico","CategoriaServico","PedidoProdutoServico","ProdutoServico","ChartType","i0","HomeComponent","constructor","router","http","String","Date","now","ColumnChart","width","height","legend","position","maxLines","bar","groupWidth","isStacked","AreaChart","title","hAxis","titleTextStyle","color","vAxis","minValue","Histogram","colors","interpolateNulls","ngOnInit","pedidoServico","categoriaServico","pedidoProdutoServico","produtoServico","listaDeCategorias","ngOnChanges","changes","filtraData","categorias","lista","forEach","categoria","push","categoriasMostradas","listaDePedidos","listaDeProdutos","listaDePedidosProdutos","gerarGraficoBarra","gerarGraficoArea","dataBr","data","getDate","toString","getMonth","getFullYear","titleColum","dataColum1","dataColum2","dataColum3","dataHist","columnsNames","val1","corrigirInicial","dataInicial","val4","aumentar","dataFinal","val2","getTime","val3","dictPedidoTemp","Map","pedidos","pedido","datar","set","id","Number","quantidades","produtosSelecionados","produto","id_produto","lucro1","lucro2","lucro3","pedidosProdutos","pedidoProduto","get","pedido_id","produto_id","valor","quantidade","nome","dictProdutoTemp","categoria_id","dataColum","console","log","getStringArea","dataIni","dataFim","atual","meses","diferenca","parseInt","semana","dataArea","datas","layers","length","i","j","cont","titleArea","produtos","pedidosProdutosSelecionados","getValor_Total","total","positivo","negativo","valorTotal","valorPositivo","valorNegativo","atualizar","pedidosSelecionados","categoriaSelecionado","split","dictPedidoSelecionado","dictProdutoSelecionado","filtrarProduto","save","filter","val","number","a","result","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Pedido } from 'src/app/models/pedido';\r\nimport { Categoria } from 'src/app/models/categoria';\r\nimport { PedidoServico } from 'src/app/servicos/pedidoServico';\r\nimport { CategoriaServico } from 'src/app/servicos/categoriaServico';\r\nimport { PedidoProdutoServico } from 'src/app/servicos/pedidoProdutoServico';\r\nimport { ProdutoServico } from 'src/app/servicos/produtoServico';\r\nimport { PedidoProduto } from 'src/app/models/pedidoProduto';\r\nimport { Produto } from 'src/app/models/produto';\r\nimport { ChartType } from 'angular-google-charts';  \r\nimport { GoogleChartComponent } from 'angular-google-charts';  \r\nimport { compileFactoryFunction } from '@angular/compiler';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit, OnChanges {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private http: HttpClient,\r\n  ) {\r\n  }\r\n\r\n  //Dicionários\r\n\r\n  //Variáveis de Serviço CRUD\r\n  public pedidoServico: PedidoServico = {} as PedidoServico;\r\n  public categoriaServico: CategoriaServico = {} as CategoriaServico;\r\n  public pedidoProdutoServico: PedidoProdutoServico = {} as PedidoProdutoServico;\r\n  public produtoServico: ProdutoServico = {} as ProdutoServico;\r\n\r\n  //Arrays com dataBinding\r\n  public categoriasMostradas: Categoria[]=[];\r\n  \r\n  //Arrays Filtrados\r\n  public pedidosProdutosSelecionados:PedidoProduto[]=[]\r\n  public produtosSelecionados: Produto[] = [];\r\n  public pedidosSelecionados: Pedido[] = [];\r\n  \r\n  //Arrays com todos os valores\r\n  private categorias: Categoria[]=[]\r\n  private pedidos: Pedido[]=[]\r\n  private pedidosProdutos: PedidoProduto[]=[]\r\n  private produtos: Produto[]=[]\r\n\r\n  //Variáveis com dataBinding\r\n  public categoriaSelecionado:String=\"\";\r\n  public dataInicial:String = \"01/01/2022\";\r\n  public dataFinal:String = String(new Date(Date.now()));\r\n  public valorTotal:String=\"\";\r\n  public valorPositivo:String=\"\";\r\n  public valorNegativo:String=\"\";\r\n\r\n  //Gráficos\r\n      titleColum=\"asd\";\r\n      columChart = ChartType.ColumnChart;\r\n      dataColum: any[] =[\r\n     [ \"2010\", 24, 20, 32, 18, 5],\r\n     [ \"2020\", 22, 23, 30, 16, 9],\r\n     [ \"2030\", 19, 29, 30, 12, 13]];\r\n     columnsNames = ['Genre', 'Fantasy & Sci Fi', 'Romance', 'Mystery/Crime', 'General',\r\n     'Western'];\r\n      widthColum = 600;\r\n      heightColum = 400;\r\n      optionsColum = {\r\n        width: 600,\r\n        height: 400,\r\n        legend: { position: 'top', maxLines: 3 },\r\n        bar: { groupWidth: '75%' },\r\n        isStacked: true,\r\n      };\r\n      \r\n      titleArea=\"asd\"\r\n      areaChart= ChartType.AreaChart;\r\n      dataArea:any[]=[]\r\n      optionsArea={\r\n        width: 600,\r\n        height: 400,\r\n        title: 'Company Performance',\r\n        hAxis: {titleTextStyle: {color: '#333'}},\r\n        vAxis: {title:\"Faturamento\",minValue: 0}\r\n      }\r\n\r\n      titleHist=\"title\"\r\n      histChart=ChartType.Histogram\r\n      dataHist= [\r\n      [2/3, -1, 0, 0],\r\n      [2/3, -1, 0, null],\r\n      [2/3, -1, 0, null],\r\n      [-1/3, 0, 1, null],\r\n      [-1/3, 0, -1, null],\r\n      [-1/3, 0, null, null],\r\n      [-1/3, 0, null, null]\r\n    ]\r\n    columnsNamesHist=['Quarks', 'Leptons', 'Gauge Bosons', 'Scalar Bosons']\r\n      optionsHist={\r\n        width: 600,\r\n        height: 400,\r\n        title: 'Charges of subatomic particles',\r\n        legend: { position: 'top', maxLines: 2 },\r\n        colors: ['#5C3292', '#1A8763', '#871B47', '#999999'],\r\n        interpolateNulls: false,\r\n      };\r\n\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.pedidoServico = new PedidoServico(this.http);\r\n    this.categoriaServico = new CategoriaServico(this.http);\r\n    this.pedidoProdutoServico = new PedidoProdutoServico(this.http);\r\n    this.produtoServico = new ProdutoServico(this.http);\r\n    this.listaDeCategorias();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    this.filtraData();\r\n  }\r\n\r\n\r\n  private async listaDeCategorias(){\r\n    let categorias = await this.categoriaServico.lista();\r\n    categorias?.forEach(categoria=>{\r\n      this.categorias.push(categoria);\r\n    })\r\n    this.categoriasMostradas=this.categorias;\r\n    await this.listaDePedidos();\r\n    await this.listaDeProdutos();\r\n    await this.listaDePedidosProdutos();\r\n    this.gerarGraficoBarra(0);\r\n    this.gerarGraficoArea(0);\r\n  }\r\n  private dataBr(data:Date):string{\r\n    return data.getDate().toString()+\"/\"+(data.getMonth()+1).toString()+\"/\"+data.getFullYear().toString()\r\n  }\r\n  private gerarGraficoBarra(categoria:Number){\r\n    let titleColum=\"Repartição de lucro por Produto em cada Categoria\"\r\n    let dataColum1=[]\r\n    let dataColum2=[]\r\n    let dataColum3=[]\r\n    let dataHist=[]\r\n    let columnsNames:any[]=[\"teste\"]\r\n    let val1=this.corrigirInicial(this.dataInicial);\r\n    let val4=this.aumentar(this.dataFinal);\r\n    let val2=new Date(val1.getTime()+(val4.getTime()-val1.getTime())/3);\r\n    let val3=new Date(val1.getTime()+(val4.getTime()-val1.getTime())/3*2);\r\n    dataColum1.push(`${this.dataBr(val1)}\\n${this.dataBr(val2)}`)\r\n    dataColum2.push(`${this.dataBr(val2)}\\n${this.dataBr(val3)}`)\r\n    dataColum3.push(`${this.dataBr(val3)}\\n${this.dataBr(val4)}`)\r\n    let dictPedidoTemp:Map<Number,Number>=new Map();\r\n    this.pedidos.forEach(pedido=>{\r\n      let datar =new Date(pedido.data.toString())\r\n      if(datar>val1&&datar<=val2) dictPedidoTemp.set(pedido.id,1)\r\n      if(datar>val2&&datar<=val3) dictPedidoTemp.set(pedido.id,2)\r\n      if(datar>val3&&datar<=val4) dictPedidoTemp.set(pedido.id,3)\r\n    });\r\n    if(!(categoria.toString()===\"0\")) {\r\n      titleColum=\"Repartição de lucro por produto em \"+this.categoriasMostradas[Number(categoria)];\r\n      let quantidades=0\r\n      this.produtosSelecionados.forEach(produto=>{\r\n        let id_produto=produto.id;\r\n        let lucro1=0;\r\n        let lucro2=0;\r\n        let lucro3=0;\r\n        this.pedidosProdutos.forEach(pedidoProduto=>{\r\n          if(dictPedidoTemp.get(pedidoProduto.pedido_id)&&pedidoProduto.produto_id.toString()===id_produto.toString()){\r\n            if(dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString()===\"1\"){\r\n              lucro1+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }else\r\n            if(dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString()===\"2\"){\r\n              lucro2+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }else{\r\n              lucro3+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }\r\n            quantidades+=Number(pedidoProduto.quantidade);\r\n          }\r\n      })\r\n      dataHist.push([produto.nome,quantidades])\r\n      dataColum1.push(lucro1)\r\n      dataColum2.push(lucro2)\r\n      dataColum3.push(lucro3)\r\n      columnsNames.push(produto.nome)\r\n    })\r\n    }else{\r\n      this.categorias.forEach(categoria=>{\r\n        let dictProdutoTemp:Map<Number,boolean>=new Map()\r\n        let categoria_id=categoria.id\r\n        this.produtosSelecionados.forEach(produto=>{\r\n            dictProdutoTemp.set(produto.id,produto.categoria_id.toString()===categoria_id.toString());\r\n        })\r\n        let lucro1=0;\r\n        let lucro2=0;\r\n        let lucro3=0;\r\n        let quantidades=0\r\n        this.pedidosProdutos.forEach(pedidoProduto=>{\r\n          if(dictPedidoTemp.get(pedidoProduto.pedido_id)&&dictProdutoTemp.get(pedidoProduto.produto_id)){\r\n            if(dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString()===\"1\"){\r\n              lucro1+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }else\r\n            if(dictPedidoTemp.get(pedidoProduto.pedido_id)?.toString()===\"2\"){\r\n              lucro2+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }else{\r\n              lucro3+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n            }\r\n            quantidades+=Number(pedidoProduto.quantidade)\r\n          }\r\n        })\r\n        dataColum1.push(lucro1)\r\n        dataColum2.push(lucro2)\r\n        dataColum3.push(lucro3)\r\n        columnsNames.push(categoria.nome)\r\n        dataHist.push([categoria.nome,])\r\n      })\r\n\r\n    }\r\n    let dataColum=[dataColum1,dataColum2,dataColum3]\r\n    this.dataColum=dataColum\r\n    console.log(dataColum)\r\n    this.titleColum=titleColum\r\n    this.columnsNames=columnsNames\r\n    console.log(columnsNames)\r\n  }\r\n  private getStringArea(dataIni:Date,dataFim:Date,atual:Date):string{\r\n    var meses = [\"Jan\",\"Fev\",\"Mar\",\"Abr\",\"Mai\",\"Jun\",\"Jul\",\"Ago\",\"Set\",\"Out\",\"Nov\",\"Dez\"];\r\n    let diferenca=parseInt(((dataFim.getTime()-dataIni.getTime())/1000/24/3600).toString())\r\n    if(diferenca<21)\r\n      return `${atual.getDate()}/${atual.getMonth()+1}/${atual.getFullYear()}`\r\n    if(diferenca<700){\r\n      let semana=0;\r\n      if(atual.getDate()<7){\r\n        semana=1\r\n      }else if(atual.getDate()<14){\r\n        semana=2\r\n      }else if(atual.getDate()<21){\r\n        semana=3\r\n      }else if(atual.getDate()<28){\r\n        semana=4\r\n      }else{  \r\n        semana=5\r\n      }\r\n      return `Sem ${semana} /${meses[atual.getMonth()+1]}`;\r\n    }if(diferenca<3650){\r\n      return `${meses[atual.getMonth()+1]}/${atual.getFullYear()}`\r\n    }\r\n    return `${atual.getFullYear()}`\r\n  }\r\n\r\n  private gerarGraficoArea(categoria:Number){\r\n    let dataInicial=this.corrigirInicial(this.dataInicial);\r\n    let dataFinal=this.aumentar(this.dataFinal);\r\n    let dataArea:any[]=[]\r\n    let title=\"\"\r\n    let datas:any[]=[dataInicial]\r\n    let diferenca=dataFinal.getTime()-dataInicial.getTime()\r\n    let layers=this.categorias.length\r\n    if(!(categoria.toString()===\"0\")){\r\n      layers=this.produtosSelecionados.length\r\n    }\r\n    \r\n    let dictPedidoTemp:Map<Number,Number>=new Map();\r\n    for (let i = 0; i < 20; i++) {\r\n      datas.push(new Date(datas[i].getTime()+diferenca/20))\r\n      dataArea.push([this.getStringArea(dataInicial,dataFinal,new Date(datas[i].getTime()+diferenca/20))])\r\n      for (let j = 0; j < layers; j++) {\r\n        dataArea[i].push(0)\r\n      }\r\n    }\r\n    this.pedidos.forEach(pedido=>{\r\n      let datar =new Date(pedido.data.toString())\r\n      for (let i = 0; i < 20; i++) {\r\n        if(datar>datas[i]&&datar<=datas[i+1])dictPedidoTemp.set(pedido.id,i)\r\n      }\r\n    });\r\n    console.log(\"Pedidos \", dictPedidoTemp)\r\n    if(!(categoria.toString()===\"0\")) {\r\n      title=\"Repartição de lucro por produto em \"+this.categoriasMostradas[Number(categoria)];\r\n      let cont=0\r\n      this.produtosSelecionados.forEach(produto=>{\r\n        cont++\r\n        let id_produto=produto.id;\r\n        this.pedidosProdutos.forEach(pedidoProduto=>{\r\n          let id=dictPedidoTemp.get(pedidoProduto.pedido_id)\r\n          if(id&&pedidoProduto.produto_id.toString()===id_produto.toString()){\r\n            dataArea[Number(id)][cont]+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade)\r\n          }\r\n      })\r\n    })\r\n    }else{\r\n      let cont=0\r\n      this.categorias.forEach(categoria=>{\r\n        cont++\r\n        let dictProdutoTemp:Map<Number,boolean>=new Map()\r\n        let categoria_id=categoria.id\r\n        this.produtosSelecionados.forEach(produto=>{\r\n            dictProdutoTemp.set(produto.id,produto.categoria_id.toString()===categoria_id.toString());\r\n        })\r\n        this.pedidosProdutos.forEach(pedidoProduto=>{\r\n          let id=dictPedidoTemp.get(pedidoProduto.pedido_id)\r\n          if(id&&dictProdutoTemp.get(pedidoProduto.produto_id)){\r\n            dataArea[Number(id)][cont]+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade)\r\n          }\r\n        })\r\n      })\r\n\r\n    }\r\n    for (let i = 1; i < dataArea.length; i++) {\r\n      for (let j = 1; j < dataArea[i].length; j++) {\r\n        dataArea[i][j]+=dataArea[i-1][j];\r\n      }\r\n    }\r\n    console.log(dataArea)\r\n    this.dataArea=dataArea\r\n    this.titleArea=title\r\n  }\r\n\r\n  private async listaDeProdutos(){\r\n    let produtos = await this.produtoServico.lista();\r\n    produtos?.forEach(produto=>{\r\n      this.produtos.push(produto);\r\n    })\r\n    this.produtosSelecionados=this.produtos;\r\n  }\r\n\r\n  private async listaDePedidosProdutos(){\r\n    let pedidosProdutos = await this.pedidoProdutoServico.lista();\r\n    pedidosProdutos?.forEach(pedidoProduto=>{\r\n      this.pedidosProdutos.push(pedidoProduto);\r\n    })\r\n    this.pedidosProdutosSelecionados=this.pedidosProdutos\r\n    this.getValor_Total();\r\n  }\r\n\r\n  private async listaDePedidos(){\r\n    let pedidos = await this.pedidoServico.lista();\r\n    pedidos?.forEach(pedido=>{\r\n      this.pedidos.push(pedido);\r\n    })\r\n    //this.pedidosMostrados = this.pedidos?.reverse();\r\n  }\r\n\r\n  private getValor_Total(){\r\n    let total=0,positivo=0,negativo=0;\r\n    this.pedidosProdutosSelecionados.forEach(pedidoProduto=>{\r\n      let val1=total;\r\n      total+=Number(pedidoProduto.valor)*Number(pedidoProduto.quantidade);\r\n      if(val1>total){\r\n        negativo+=val1-total\r\n      }else{\r\n        positivo+=total-val1\r\n      }\r\n    })\r\n    this.valorTotal=total.toString();\r\n    this.valorPositivo=positivo.toString();\r\n    this.valorNegativo=negativo.toString();\r\n  }\r\n\r\n  async atualizar(){\r\n    this.pedidosSelecionados=this.pedidos;\r\n    this.pedidosProdutosSelecionados=this.pedidosProdutos;\r\n    this.produtosSelecionados=this.produtos;\r\n    let categoria=new Number(this.categoriaSelecionado.split(\"-\")[0])\r\n    let dictPedidoSelecionado = this.filtraData();\r\n    let dictProdutoSelecionado = this.filtrarProduto(categoria)\r\n    let dictPedidoTemp:Map<Number,boolean> = new Map();\r\n    let save=this.pedidosProdutosSelecionados.filter(pedidoProduto=>{\r\n      let val=false\r\n      if(dictPedidoSelecionado.get(pedidoProduto.pedido_id)){\r\n        if(dictProdutoSelecionado.get(pedidoProduto.produto_id)){\r\n          val=true\r\n        }\r\n      }\r\n      if(!dictPedidoTemp.get(pedidoProduto.pedido_id))dictPedidoTemp.set(pedidoProduto.pedido_id,val)\r\n      return val;\r\n    })\r\n    this.pedidosProdutosSelecionados=save\r\n    this.pedidosSelecionados=this.pedidosSelecionados.filter(pedido=>{\r\n      if(dictPedidoSelecionado.get(pedido.id)) return true\r\n      return false;\r\n    })\r\n    this.getValor_Total();\r\n    this.gerarGraficoBarra(categoria);\r\n    this.gerarGraficoArea(categoria);\r\n  }\r\n\r\n  filtrarProduto(categoria_id:Number):Map<Number,boolean>{\r\n    let dictProdutoSelecionado:Map<Number,boolean>=new Map();\r\n    if(categoria_id.toString()===\"0\"){\r\n      this.produtosSelecionados.forEach(produto=>{\r\n        dictProdutoSelecionado.set(produto.id,true);\r\n      })\r\n      return dictProdutoSelecionado\r\n    }\r\n    this.produtosSelecionados=this.produtosSelecionados.filter(produto=>{\r\n      if(produto.categoria_id.toString()===categoria_id.toString()){\r\n        dictProdutoSelecionado.set(produto.id,true)\r\n        return true\r\n      }\r\n      dictProdutoSelecionado.set(produto.id,false)\r\n      return false;\r\n    })\r\n    return dictProdutoSelecionado;\r\n  }\r\n\r\n  number (a : Number){\r\n    return Number(a)\r\n  }\r\n\r\n\r\n  filtraData():Map<Number,boolean>{\r\n    let dictPedidoSelecionado:Map<Number,boolean>=new Map();\r\n    this.pedidosSelecionados = this.pedidos.filter(result =>{\r\n      let val=this.corrigirInicial(this.dataInicial) < new Date(result.data.toString()) && this.aumentar(this.dataFinal) > new Date(result.data.toString())\r\n      dictPedidoSelecionado.set(result.id,val)\r\n      return val\r\n    })\r\n    return dictPedidoSelecionado\r\n  }\r\n  corrigirInicial(data:String):Date{\r\n    let val = (new Date(String(data))).getTime()+10800000-1;\r\n    return new Date(val)\r\n  }\r\n  aumentar(data:String):Date{\r\n    let val = (new Date(String(data))).getTime()+86399999+10800000;\r\n    return new Date(val)\r\n  }\r\n}\r\n\r\n\r\n","<section class=\"page-section\" id=\"contact\" style=\"margin-top: 100px;\">\r\n    <div class=\"container\">\r\n        <div>\r\n            <div class=\"modelo\">\r\n                <input type=\"date\" onkeydown=\"return false\" id=\"dataI\" name=\"dataI\" [(ngModel)]=\"dataInicial\" (change) = \"atualizar()\">\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Data Inicio</label>\r\n                <input type=\"date\" onkeydown=\"return false\" id=\"dataF\" name=\"dataF\" [(ngModel)]=\"dataFinal\" (change) = \"atualizar()\">\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Data Final</label>\r\n                <label for=\"labelFiltro\" style=\"display: block;\">Produtos</label>\r\n                <select name=\"teste\" id=\"required\" class=\"form-control form-control-chosen-required\" (change)=\"atualizar()\" [(ngModel)] = \"categoriaSelecionado\" data-placeholder=\"CPF - Nome do cliente\" >\r\n                        <option>0- Todas</option>\r\n                        <option *ngFor=\"let categoria of categoriasMostradas; index as i\" id=\"{{categoria.id}}\">\r\n                            {{(i+1)+\"- \"+categoria.nome}}</option>\r\n                    </select>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelTotal\" style=\"display: block;\">Total</label>\r\n                <label for=\"labelTotalView\" style=\"display: block;\">{{valorTotal}}</label>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelSoma\" style=\"display: block;\">Soma</label>\r\n                <label for=\"labelSomaView\" style=\"display: block;\">{{valorPositivo}}</label>\r\n            </div>\r\n            <div class=\"modelo\">\r\n                <label for=\"labelSubtracao\" style=\"display: block;\">Subtração</label>\r\n                <label for=\"labelSubtracaoView\" style=\"display: block;\">{{valorNegativo}}</label>\r\n            </div>\r\n        </div>\r\n        <hr>\r\n        <div>\r\n            <google-chart\r\n            [title]=\"titleColum\"\r\n            [type]=\"columChart\"\r\n            [data]=\"dataColum\"\r\n            [columns]=\"columnsNames\"\r\n            [width]=\"widthColum\"\r\n            [height]=\"heightColum\"\r\n            [options]=\"optionsColum\"\r\n            >\r\n            </google-chart>\r\n        </div>\r\n        <div>\r\n            <google-chart\r\n            [title]=\"titleArea\"\r\n            [type]=\"areaChart\"\r\n            [data]=\"dataArea\"\r\n            [columns]=\"columnsNames\"\r\n            [options]=\"optionsArea\"\r\n            >\r\n            </google-chart>\r\n        </div>\r\n        <div>\r\n            <google-chart\r\n            [title]=\"titleHist\"\r\n            [type]=\"histChart\"\r\n            [data]=\"dataHist\"\r\n            [columns]=\"columnsNamesHist\"\r\n            [options]=\"optionsHist\"\r\n            >\r\n            </google-chart>\r\n        </div>\r\n        <hr>\r\n        <!--<div class=\"row \">\r\n            <div class=\"col-lg-8 col-xl-7\">\r\n            <div *ngIf=\"pedidos && pedidos.length == 0\" class=\"alert alert-primary\" role=\"alert\">\r\n                Não existem pedidos cadastrados\r\n            </div>\r\n            <table *ngIf=\"pedidos && pedidos.length > 0\" class=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                    <th scope=\"col\">ID do pedido</th>\r\n                    <th scope=\"col\">ID do cliente</th>\r\n                    <th scope=\"col\">Valor total</th>\r\n                    <th scope=\"col\">Data</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let pedido of pedidosMostrados.slice(0, 5)\">\r\n                    <th scope=\"row\">{{pedido.id}}</th>\r\n                    <td>{{pedido.cliente_id}}</td>\r\n                    <td>{{number(pedido.valor_total) | currency}}</td>\r\n                    <td>{{pedido.data}}</td>\r\n                    </tr>\r\n                </tbody>\r\n                <label class=\"naDireita\" routerLink=\"/lista-completa\">Mostrar tudo</label>\r\n            </table>\r\n            </div>\r\n        </div>-->\r\n    </div>\r\n</section>  "]},"metadata":{},"sourceType":"module"}