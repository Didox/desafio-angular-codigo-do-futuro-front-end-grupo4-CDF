{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { firstValueFrom } from 'rxjs';\nexport class ClienteServico {\n  constructor(http) {\n    this.http = http;\n  }\n\n  lista() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let clientes = yield firstValueFrom(_this.http.get(`${environment.api}/clientes`));\n      return clientes;\n    })();\n  }\n\n  getLast() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let cliente = yield firstValueFrom(_this2.http.get(`${environment.api}/clientesLast`));\n      return cliente.at(0);\n    })();\n  }\n\n  criar(cliente) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let clienteRest = yield firstValueFrom(_this3.http.post(`${environment.api}/clientes/`, cliente));\n      return clienteRest;\n    })();\n  }\n\n  update(cliente) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let clienteRest = yield firstValueFrom(_this4.http.put(`${environment.api}/clientes/${cliente.id}`, cliente));\n      return clienteRest;\n    })();\n  }\n\n  buscaPorId(id) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this5.http.get(`${environment.api}/clientes/${id}`));\n    })();\n  }\n\n  excluirPorId(id) {\n    firstValueFrom(this.http.delete(`${environment.api}/clientes/${id}`));\n  }\n\n}","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,8BAA5B;AAGA,SAASC,cAAT,QAA+B,MAA/B;AAEA,OAAM,MAAOC,cAAP,CAAqB;EAEvBC,YAAoBC,IAApB,EAAmC;IAAf;EAAoB;;EAE3BC,KAAK;IAAA;;IAAA;MACd,IAAIC,QAAQ,SAA+BL,cAAc,CAAC,KAAI,CAACG,IAAL,CAAUG,GAAV,CAAyB,GAAGP,WAAW,CAACQ,GAAG,WAA3C,CAAD,CAAzD;MACA,OAAOF,QAAP;IAFc;EAGjB;;EAEYG,OAAO;IAAA;;IAAA;MAChB,IAAIC,OAAO,SAA+BT,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAyB,GAAGP,WAAW,CAACQ,GAAG,eAA3C,CAAD,CAAxD;MACA,OAAOE,OAAO,CAACC,EAAR,CAAW,CAAX,CAAP;IAFgB;EAGnB;;EAEYC,KAAK,CAACF,OAAD,EAAgB;IAAA;;IAAA;MAC9B,IAAIG,WAAW,SAA6BZ,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUU,IAAV,CAAwB,GAAGd,WAAW,CAACQ,GAAG,YAA1C,EAAwDE,OAAxD,CAAD,CAA1D;MACA,OAAOG,WAAP;IAF8B;EAGjC;;EAEYE,MAAM,CAACL,OAAD,EAAgB;IAAA;;IAAA;MAC/B,IAAIG,WAAW,SAA6BZ,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUY,GAAV,CAAuB,GAAGhB,WAAW,CAACQ,GAAG,aAAaE,OAAO,CAACO,EAAE,EAAhE,EAAoEP,OAApE,CAAD,CAA1D;MACA,OAAOG,WAAP;IAF+B;EAGlC;;EAEYK,UAAU,CAACD,EAAD,EAAU;IAAA;;IAAA;MAC7B,aAAahB,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAmC,GAAGP,WAAW,CAACQ,GAAG,aAAaS,EAAE,EAApE,CAAD,CAA3B;IAD6B;EAEhC;;EAEME,YAAY,CAACF,EAAD,EAAU;IACzBhB,cAAc,CAAC,KAAKG,IAAL,CAAUgB,MAAV,CAAiB,GAAGpB,WAAW,CAACQ,GAAG,aAAaS,EAAE,EAAlD,CAAD,CAAd;EACH;;AA9BsB","names":["environment","firstValueFrom","ClienteServico","constructor","http","lista","clientes","get","api","getLast","cliente","at","criar","clienteRest","post","update","put","id","buscaPorId","excluirPorId","delete"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\servicos\\clienteServico.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Cliente } from \"../models/cliente\";\r\n\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\nexport class ClienteServico{\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    public async lista(): Promise<Cliente[] | undefined> {\r\n        let clientes:Cliente[] | undefined = await firstValueFrom(this.http.get<Cliente[]>(`${environment.api}/clientes`))\r\n        return clientes;\r\n    }\r\n\r\n    public async getLast(): Promise<Cliente | undefined> {\r\n        let cliente:Cliente[] | undefined = await firstValueFrom(this.http.get<Cliente[]>(`${environment.api}/clientesLast`))\r\n        return cliente.at(0);\r\n    }\r\n\r\n    public async criar(cliente:Cliente): Promise<Cliente | undefined> {\r\n        let clienteRest:Cliente | undefined = await firstValueFrom(this.http.post<Cliente>(`${environment.api}/clientes/`, cliente))\r\n        return clienteRest;\r\n    }\r\n\r\n    public async update(cliente:Cliente): Promise<Cliente | undefined> {\r\n        let clienteRest:Cliente | undefined = await firstValueFrom(this.http.put<Cliente>(`${environment.api}/clientes/${cliente.id}`, cliente))\r\n        return clienteRest;\r\n    }\r\n\r\n    public async buscaPorId(id:Number): Promise<Cliente | undefined> {\r\n        return await firstValueFrom(this.http.get<Cliente | undefined>(`${environment.api}/clientes/${id}`))\r\n    }\r\n\r\n    public excluirPorId(id:Number) {\r\n        firstValueFrom(this.http.delete(`${environment.api}/clientes/${id}`))\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}