{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/WM/Documents/GitHub/desafio-angular-codigo-do-futuro/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'src/environments/environment';\nimport { firstValueFrom } from 'rxjs';\nexport class PedidoServico {\n  constructor(http) {\n    this.http = http;\n  }\n\n  lista() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidos = yield firstValueFrom(_this.http.get(`${environment.api}/pedidos`));\n      return pedidos;\n    })();\n  }\n\n  criar(pedido) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidoRest = yield firstValueFrom(_this2.http.post(`${environment.api}/pedidos/`, pedido));\n      return pedidoRest;\n    })();\n  }\n\n  update(pedido) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidoRest = yield firstValueFrom(_this3.http.put(`${environment.api}/pedidos/${pedido.id}`, pedido));\n      return pedidoRest;\n    })();\n  }\n\n  buscaPorId(id) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this4.http.get(`${environment.api}/pedidos/${id}`));\n    })();\n  }\n\n  getLast() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedido = yield firstValueFrom(_this5.http.get(`${environment.api}/pedidosLast`));\n      return pedido;\n    })();\n  }\n\n  excluirPorId(id) {\n    firstValueFrom(this.http.delete(`${environment.api}/pedidos/${id}`));\n  }\n\n  buscaPorClienteId(cliente_id) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      let pedidos = yield firstValueFrom(_this6.http.get(`${environment.api}/pedidos`));\n      return pedidos.filter(pedido => cliente_id == pedido.cliente_id);\n    })();\n  }\n\n  buscaPorProdutoId(produto_id) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield firstValueFrom(_this7.http.get(`${environment.api}/pedidos/produtos/${produto_id}`));\n    })();\n  }\n\n}","map":{"version":3,"mappings":";AACA,SAASA,WAAT,QAA4B,8BAA5B;AAGA,SAASC,cAAT,QAA+B,MAA/B;AAEA,OAAM,MAAOC,aAAP,CAAoB;EAEtBC,YAAoBC,IAApB,EAAmC;IAAf;EAAoB;;EAE3BC,KAAK;IAAA;;IAAA;MACd,IAAIC,OAAO,SAA8BL,cAAc,CAAC,KAAI,CAACG,IAAL,CAAUG,GAAV,CAAwB,GAAGP,WAAW,CAACQ,GAAG,UAA1C,CAAD,CAAvD;MACA,OAAOF,OAAP;IAFc;EAGjB;;EAEYG,KAAK,CAACC,MAAD,EAAc;IAAA;;IAAA;MAC5B,IAAIC,UAAU,SAA4BV,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUQ,IAAV,CAAuB,GAAGZ,WAAW,CAACQ,GAAG,WAAzC,EAAsDE,MAAtD,CAAD,CAAxD;MACA,OAAOC,UAAP;IAF4B;EAG/B;;EAEYE,MAAM,CAACH,MAAD,EAAc;IAAA;;IAAA;MAC7B,IAAIC,UAAU,SAA4BV,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUU,GAAV,CAAsB,GAAGd,WAAW,CAACQ,GAAG,YAAYE,MAAM,CAACK,EAAE,EAA7D,EAAiEL,MAAjE,CAAD,CAAxD;MACA,OAAOC,UAAP;IAF6B;EAGhC;;EAEYK,UAAU,CAACD,EAAD,EAAU;IAAA;;IAAA;MAC7B,aAAad,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAkC,GAAGP,WAAW,CAACQ,GAAG,YAAYO,EAAE,EAAlE,CAAD,CAA3B;IAD6B;EAEhC;;EAEYE,OAAO;IAAA;;IAAA;MAChB,IAAIP,MAAM,SAA4BT,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAsB,GAAGP,WAAW,CAACQ,GAAG,cAAxC,CAAD,CAApD;MACA,OAAOE,MAAP;IAFgB;EAGnB;;EAEMQ,YAAY,CAACH,EAAD,EAAU;IACzBd,cAAc,CAAC,KAAKG,IAAL,CAAUe,MAAV,CAAiB,GAAGnB,WAAW,CAACQ,GAAG,YAAYO,EAAE,EAAjD,CAAD,CAAd;EACH;;EAEYK,iBAAiB,CAACC,UAAD,EAAkB;IAAA;;IAAA;MAC5C,IAAIf,OAAO,SAA8BL,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAwB,GAAGP,WAAW,CAACQ,GAAG,UAA1C,CAAD,CAAvD;MACA,OAAOF,OAAO,CAACgB,MAAR,CAAeZ,MAAM,IAAIW,UAAU,IAAEX,MAAM,CAACW,UAA5C,CAAP;IAF4C;EAG/C;;EAEYE,iBAAiB,CAACC,UAAD,EAAkB;IAAA;;IAAA;MAC5C,aAAavB,cAAc,CAAC,MAAI,CAACG,IAAL,CAAUG,GAAV,CAAkC,GAAGP,WAAW,CAACQ,GAAG,qBAAqBgB,UAAU,EAAnF,CAAD,CAA3B;IAD4C;EAE/C;;AAvCqB","names":["environment","firstValueFrom","PedidoServico","constructor","http","lista","pedidos","get","api","criar","pedido","pedidoRest","post","update","put","id","buscaPorId","getLast","excluirPorId","delete","buscaPorClienteId","cliente_id","filter","buscaPorProdutoId","produto_id"],"sourceRoot":"","sources":["C:\\Users\\WM\\Documents\\GitHub\\desafio-angular-codigo-do-futuro\\src\\app\\servicos\\pedidoServico.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Pedido } from \"../models/pedido\";\r\n\r\nimport { firstValueFrom } from 'rxjs';\r\n\r\nexport class PedidoServico{\r\n\r\n    constructor(private http:HttpClient) { }\r\n\r\n    public async lista(): Promise<Pedido[] | undefined> {\r\n        let pedidos:Pedido[] | undefined = await firstValueFrom(this.http.get<Pedido[]>(`${environment.api}/pedidos`))\r\n        return pedidos;\r\n    }\r\n\r\n    public async criar(pedido:Pedido): Promise<Pedido | undefined> {\r\n        let pedidoRest:Pedido | undefined = await firstValueFrom(this.http.post<Pedido>(`${environment.api}/pedidos/`, pedido))\r\n        return pedidoRest;\r\n    }\r\n\r\n    public async update(pedido:Pedido): Promise<Pedido | undefined> {\r\n        let pedidoRest:Pedido | undefined = await firstValueFrom(this.http.put<Pedido>(`${environment.api}/pedidos/${pedido.id}`, pedido))\r\n        return pedidoRest;\r\n    }\r\n\r\n    public async buscaPorId(id:Number): Promise<Pedido | undefined> {\r\n        return await firstValueFrom(this.http.get<Pedido | undefined>(`${environment.api}/pedidos/${id}`))\r\n    }\r\n\r\n    public async getLast(): Promise<Pedido | undefined> {\r\n        let pedido:Pedido | undefined = await firstValueFrom(this.http.get<Pedido>(`${environment.api}/pedidosLast`))\r\n        return pedido;\r\n    }\r\n\r\n    public excluirPorId(id:Number) {\r\n        firstValueFrom(this.http.delete(`${environment.api}/pedidos/${id}`))\r\n    }\r\n\r\n    public async buscaPorClienteId(cliente_id:Number): Promise<Pedido[] | undefined> {\r\n        let pedidos:Pedido[] | undefined = await firstValueFrom(this.http.get<Pedido[]>(`${environment.api}/pedidos`))\r\n        return pedidos.filter(pedido => cliente_id==pedido.cliente_id);\r\n    }\r\n\r\n    public async buscaPorProdutoId(produto_id:Number): Promise<Pedido | undefined> {\r\n        return await firstValueFrom(this.http.get<Pedido | undefined>(`${environment.api}/pedidos/produtos/${produto_id}`));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}